{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "# from sqlalchemy import create_engine\n",
    "from functools import reduce\n",
    "import warnings\n",
    "import pymysql\n",
    "import psycopg2\n",
    "warnings.filterwarnings(action='ignore')\n",
    "pd.set_option('display.max_rows', 300)\n",
    "pd.set_option('display.max_columns', 300)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "현재 : 2023-03-13 14:49:31.874120\n",
      "1일 전 : 2023-03-12 14:49:31.874120\n",
      "1일 후 : 2023-03-14 14:49:31.874120\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime, timedelta\n",
    "\n",
    "now = datetime.now()\n",
    "print(\"현재 :\" , now)\t# 현재 : 2021-01-09 19:41:03.645702\n",
    "before_one_day = now - timedelta(days=1)\n",
    "print(\"1일 전 :\", before_one_day)\t# 1일 전 : 2021-01-08 19:41:03.645702\n",
    "after_one_day = now + timedelta(days=1)\n",
    "print(\"1일 후 :\", after_one_day)\t# 1일 후 : 2021-01-10 19:41:03.645702"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PG "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 데이터베이스 연결\n",
    "msdb_ = psycopg2.connect (\n",
    "    host = '175.126.38.47',\n",
    "    database = 'db_base',\n",
    "    user = 'orderhero',\n",
    "    password = 'OhejGL@JFH2023',\n",
    "    port = '5432'\n",
    "    )\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "my_sql = f\"\"\"\n",
    "SELECT * FROM sales_history\n",
    "\"\"\"\n",
    "\n",
    "with msdb_.cursor() as cursor :\n",
    "    cursor.execute(my_sql)\n",
    "    result = cursor.fetchall()\n",
    "    msdb_.commit()\n",
    "    cursor.close()\n",
    "msdb_.close()\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "outlist = []\n",
    "for utf_ in result :\n",
    "    col1 = utf_[0]\n",
    "    col2 = utf_[1]\n",
    "    col3 = utf_[2]\n",
    "    col4 = utf_[3]\n",
    "    col5 = utf_[4]\n",
    "    col6 = utf_[5]\n",
    "    col7 = utf_[6]\n",
    "    col8 = utf_[7]\n",
    "    col9 = utf_[8]\n",
    "    col10 = utf_[9]\n",
    "    col11 = utf_[10]\n",
    "    col12 = utf_[11]\n",
    "   \n",
    "\n",
    "\n",
    "    outlist.append([col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12])\n",
    "\n",
    "\n",
    "df_pg_sales_history = pd.DataFrame(outlist, columns = ['sales_no', 'cust_id', 'sales_date', 'activity_option', 'count'\n",
    "                                                        , 'process_state', 'sales_cost', 'detail_memo', 'unique_memo', 'insert_id'\n",
    "                                                        , 'insert_date', 'sales_activities'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 116 entries, 0 to 115\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype         \n",
      "---  ------            --------------  -----         \n",
      " 0   sales_no          116 non-null    int64         \n",
      " 1   cust_id           116 non-null    object        \n",
      " 2   sales_date        116 non-null    datetime64[ns]\n",
      " 3   activity_option   116 non-null    object        \n",
      " 4   count             116 non-null    int64         \n",
      " 5   process_state     116 non-null    object        \n",
      " 6   sales_cost        116 non-null    int64         \n",
      " 7   detail_memo       116 non-null    object        \n",
      " 8   unique_memo       116 non-null    object        \n",
      " 9   insert_id         116 non-null    object        \n",
      " 10  insert_date       116 non-null    datetime64[ns]\n",
      " 11  sales_activities  116 non-null    object        \n",
      "dtypes: datetime64[ns](2), int64(3), object(7)\n",
      "memory usage: 11.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df_pg_sales_history.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>cust_id</th>\n",
       "      <th>sales_date</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>count</th>\n",
       "      <th>process_state</th>\n",
       "      <th>sales_cost</th>\n",
       "      <th>detail_memo</th>\n",
       "      <th>unique_memo</th>\n",
       "      <th>insert_id</th>\n",
       "      <th>insert_date</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>2023-01-12 12:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>품목 확장 목적 방문 / 1.17일 추가 미팅예정</td>\n",
       "      <td></td>\n",
       "      <td>messi</td>\n",
       "      <td>2023-01-17 11:01:26.023678</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>100</td>\n",
       "      <td>활동 내용 테스트&lt;br&gt;엔터 엔터 엔터&lt;br&gt;</td>\n",
       "      <td></td>\n",
       "      <td>zeus</td>\n",
       "      <td>2023-01-17 14:13:01.700220</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>아소비바 / 첫 배송 오더체크 / 신촌점 동시 운영중으로 큰 이슈 없음 확인 / 오...</td>\n",
       "      <td></td>\n",
       "      <td>owne</td>\n",
       "      <td>2023-01-17 17:14:31.716350</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>0</td>\n",
       "      <td>done</td>\n",
       "      <td>0</td>\n",
       "      <td>1. 신규 업장 오픈 예정&lt;br&gt; - 일식, 이자카야 업종&lt;br&gt; - 설 이후 예정</td>\n",
       "      <td></td>\n",
       "      <td>orderherom</td>\n",
       "      <td>2023-01-17 17:27:53.790581</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>2023-01-17 15:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>0</td>\n",
       "      <td>before_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>1. 최근 단가, 품질 이슈 상품 조사&lt;br&gt; - 밀락골드: 어제 5800원, 오늘...</td>\n",
       "      <td></td>\n",
       "      <td>orderherom</td>\n",
       "      <td>2023-01-17 17:31:56.309482</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     cust_id          sales_date activity_option  count  \\\n",
       "0         1  2108701169 2023-01-12 12:00:00           품목 확장      1   \n",
       "1         2  0105639738 2023-01-17 12:00:00           품목 확장      1   \n",
       "2         3  1585900160 2023-01-17 12:00:00           오더 체크      1   \n",
       "3         6  8890302509 2023-01-17 12:00:00           고객 케어      0   \n",
       "4         7  2023165563 2023-01-17 15:00:00           품목 확장      0   \n",
       "\n",
       "       process_state  sales_cost  \\\n",
       "0      in_processing           0   \n",
       "1      in_processing         100   \n",
       "2      in_processing           0   \n",
       "3               done           0   \n",
       "4  before_processing           0   \n",
       "\n",
       "                                         detail_memo unique_memo   insert_id  \\\n",
       "0                        품목 확장 목적 방문 / 1.17일 추가 미팅예정                   messi   \n",
       "1                          활동 내용 테스트<br>엔터 엔터 엔터<br>                    zeus   \n",
       "2  아소비바 / 첫 배송 오더체크 / 신촌점 동시 운영중으로 큰 이슈 없음 확인 / 오...                    owne   \n",
       "3     1. 신규 업장 오픈 예정<br> - 일식, 이자카야 업종<br> - 설 이후 예정              orderherom   \n",
       "4  1. 최근 단가, 품질 이슈 상품 조사<br> - 밀락골드: 어제 5800원, 오늘...              orderherom   \n",
       "\n",
       "                 insert_date sales_activities sales_date_ymd  \n",
       "0 2023-01-17 11:01:26.023678             품목수취     2023-01-12  \n",
       "1 2023-01-17 14:13:01.700220             품목수취     2023-01-17  \n",
       "2 2023-01-17 17:14:31.716350             단순방문     2023-01-17  \n",
       "3 2023-01-17 17:27:53.790581             단순방문     2023-01-17  \n",
       "4 2023-01-17 17:31:56.309482             품목수취     2023-01-17  "
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pg_sales_history.head()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 마지막 index 추출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 데이터베이스 연결\n",
    "msdb_ = psycopg2.connect (\n",
    "    host = '175.126.38.47',\n",
    "    database = 'db_base',\n",
    "    user = 'orderhero',\n",
    "    password = 'OhejGL@JFH2023',\n",
    "    port = '5432'\n",
    "    )\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "my_sql = f\"\"\"\n",
    "SELECT max(sales_no) FROM sales_history\n",
    "\"\"\"\n",
    "\n",
    "with msdb_.cursor() as cursor :\n",
    "    cursor.execute(my_sql)\n",
    "    result = cursor.fetchall()\n",
    "    msdb_.commit()\n",
    "    cursor.close()\n",
    "msdb_.close()\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "outlist = []\n",
    "for utf_ in result :\n",
    "    col1 = utf_[0]\n",
    "    \n",
    "   \n",
    "\n",
    "\n",
    "    outlist.append([col1])\n",
    "\n",
    "\n",
    "df_pg_sales_history_salesno = pd.DataFrame(outlist, columns = ['sales_no_index'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no_index\n",
       "0             124"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pg_sales_history_salesno"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "124"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_sales_no = df_pg_sales_history_salesno.loc[0, 'sales_no_index']\n",
    "max_sales_no"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Maria"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 고객정보"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 데이터베이스 연결\n",
    "msdb_ = pymysql.connect(\n",
    "    user='orderherodl', # 추후 읽기 전용으로 수정 필요 \n",
    "    passwd='OhejGL@JFH2023',\n",
    "    host='orderherodl.cafe24.com',\n",
    "    db='orderherodl',\n",
    "    charset='utf8',\n",
    "#     use_unicode=True\n",
    ")\n",
    "\n",
    "\n",
    "my_sql = f\"\"\"\n",
    "SELECT tc.CUST_ID\n",
    ", tc.business_name\n",
    ", tc.AREA_GU\n",
    ", tec.ER_CTG_NAME\n",
    ", DATE_FORMAT(tc.REG_DATE, '%Y-%m-%d')\n",
    ", min(to2.REG_DATE)\n",
    "FROM TB_CUST tc\n",
    "INNER JOIN TB_ER_CTG tec ON tec.ER_CTG_CD = tc.CTG_CD\n",
    "LEFT JOIN TB_ORDER to2 ON to2.CUST_ID = tc.CUST_ID\n",
    "WHERE DELIV_POSITION IS NOT NULL\n",
    "AND DELIV_POSITION != ''\n",
    "AND test_yn = 'N'\n",
    "GROUP BY tc.CUST_ID\n",
    "\"\"\"\n",
    "\n",
    "with msdb_.cursor() as cursor :\n",
    "    cursor.execute(my_sql)\n",
    "    result = cursor.fetchall()\n",
    "    msdb_.commit()\n",
    "    cursor.close()\n",
    "msdb_.close()\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "outlist = []\n",
    "for utf_ in result :\n",
    "    col1 = utf_[0].decode('UTF-8')\n",
    "    col2 = utf_[1].decode('UTF-8')\n",
    "    col3 = utf_[2].decode('UTF-8')\n",
    "    col4 = utf_[3].decode('UTF-8')\n",
    "    col5 = utf_[4].decode('UTF-8')\n",
    "    col6 = utf_[5]\n",
    "    \n",
    "   \n",
    "\n",
    "\n",
    "    outlist.append([col1, col2, col3, col4, col5, col6])\n",
    "\n",
    "\n",
    "df_cust_info = pd.DataFrame(outlist, columns = ['CUST_ID', '매장명', '지역구', '업종', '가입일', '첫발주일'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>가입일</th>\n",
       "      <th>첫발주일</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>01031778007</td>\n",
       "      <td>빈수빈수</td>\n",
       "      <td>광진구</td>\n",
       "      <td>기타</td>\n",
       "      <td>2022-12-19</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0103338484</td>\n",
       "      <td>베러댄알콜</td>\n",
       "      <td>마포구</td>\n",
       "      <td>카페/베이커리</td>\n",
       "      <td>2022-01-13</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0104260151</td>\n",
       "      <td>NgocThuan</td>\n",
       "      <td>광진구</td>\n",
       "      <td>기타</td>\n",
       "      <td>2022-03-29</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0833200420</td>\n",
       "      <td>연탄요릿집</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2021-04-09</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010394200</td>\n",
       "      <td>우정식당</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2020-07-24</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6001</th>\n",
       "      <td>영업_프렌치</td>\n",
       "      <td>영업프렌치</td>\n",
       "      <td>성동구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-12-08</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6002</th>\n",
       "      <td>영업_피자</td>\n",
       "      <td>영업피자</td>\n",
       "      <td>성동구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-12-08</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6003</th>\n",
       "      <td>영업_한식</td>\n",
       "      <td>영업한식</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-06-16</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6004</th>\n",
       "      <td>영업_호프</td>\n",
       "      <td>영업호프</td>\n",
       "      <td>성동구</td>\n",
       "      <td>기타</td>\n",
       "      <td>2022-06-16</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6005</th>\n",
       "      <td>영업용_피자</td>\n",
       "      <td>영업용피자</td>\n",
       "      <td>성동구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-12-08</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6006 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          CUST_ID        매장명  지역구       업종         가입일  첫발주일\n",
       "0     01031778007       빈수빈수  광진구       기타  2022-12-19  None\n",
       "1      0103338484      베러댄알콜  마포구  카페/베이커리  2022-01-13  None\n",
       "2      0104260151  NgocThuan  광진구       기타  2022-03-29  None\n",
       "3      0833200420      연탄요릿집  성동구       한식  2021-04-09  None\n",
       "4      1010394200       우정식당  성동구       한식  2020-07-24  None\n",
       "...           ...        ...  ...      ...         ...   ...\n",
       "6001       영업_프렌치      영업프렌치  성동구   서양식/피자  2022-12-08  None\n",
       "6002        영업_피자       영업피자  성동구   서양식/피자  2022-12-08  None\n",
       "6003        영업_한식       영업한식  성동구       한식  2022-06-16  None\n",
       "6004        영업_호프       영업호프  성동구       기타  2022-06-16  None\n",
       "6005       영업용_피자      영업용피자  성동구   서양식/피자  2022-12-08  None\n",
       "\n",
       "[6006 rows x 6 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## toi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 데이터베이스 연결\n",
    "msdb_ = pymysql.connect(\n",
    "    user='orderherodl', # 추후 읽기 전용으로 수정 필요 \n",
    "    passwd='OhejGL@JFH2023',\n",
    "    host='orderherodl.cafe24.com',\n",
    "    db='orderherodl',\n",
    "    charset='utf8',\n",
    "#     use_unicode=True\n",
    ")\n",
    "\n",
    "\n",
    "my_sql = f\"\"\"\n",
    "SELECT order_no \n",
    ", PROD_CD \n",
    ", order_pay\n",
    ", prod_order_cnt\n",
    ", coupon_price\n",
    "FROM TB_ORDER_ITEM\n",
    "WHERE ARRIVE_DATE >= '2022-11-01' \n",
    "\"\"\"\n",
    "\n",
    "with msdb_.cursor() as cursor :\n",
    "    cursor.execute(my_sql)\n",
    "    result = cursor.fetchall()\n",
    "    msdb_.commit()\n",
    "    cursor.close()\n",
    "msdb_.close()\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "outlist = []\n",
    "for utf_ in result :\n",
    "    col1 = utf_[0]\n",
    "    col2 = utf_[1].decode('UTF-8')\n",
    "    col3 = utf_[2]\n",
    "    col4 = utf_[3]\n",
    "    col5 = utf_[4]\n",
    "   \n",
    "\n",
    "\n",
    "    outlist.append([col1, col2, col3, col4, col5])\n",
    "\n",
    "\n",
    "df_toi_raw = pd.DataFrame(outlist, columns = ['ORDER_NO', 'PROD_CD', 'order_pay', 'prod_order_cnt', 'coupon_price'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ORDER_NO</th>\n",
       "      <th>PROD_CD</th>\n",
       "      <th>order_pay</th>\n",
       "      <th>prod_order_cnt</th>\n",
       "      <th>coupon_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>301363</td>\n",
       "      <td>L0110134</td>\n",
       "      <td>72600</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>301363</td>\n",
       "      <td>P0610589</td>\n",
       "      <td>7381</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>301363</td>\n",
       "      <td>P0610590</td>\n",
       "      <td>12947</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>301363</td>\n",
       "      <td>P0810008</td>\n",
       "      <td>72116</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>301522</td>\n",
       "      <td>P0791203</td>\n",
       "      <td>159720</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500070</th>\n",
       "      <td>487767</td>\n",
       "      <td>A0210202</td>\n",
       "      <td>800</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500071</th>\n",
       "      <td>487767</td>\n",
       "      <td>P0410465</td>\n",
       "      <td>4400</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500072</th>\n",
       "      <td>487780</td>\n",
       "      <td>P9992760</td>\n",
       "      <td>2700</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500073</th>\n",
       "      <td>487781</td>\n",
       "      <td>A0210199</td>\n",
       "      <td>3000</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500074</th>\n",
       "      <td>487792</td>\n",
       "      <td>A0210824</td>\n",
       "      <td>1200</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>500075 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ORDER_NO   PROD_CD  order_pay  prod_order_cnt  coupon_price\n",
       "0         301363  L0110134      72600             2.0             0\n",
       "1         301363  P0610589       7381             6.0             0\n",
       "2         301363  P0610590      12947             3.0             0\n",
       "3         301363  P0810008      72116             3.0             0\n",
       "4         301522  P0791203     159720             1.0             0\n",
       "...          ...       ...        ...             ...           ...\n",
       "500070    487767  A0210202        800             2.0             0\n",
       "500071    487767  P0410465       4400             2.0             0\n",
       "500072    487780  P9992760       2700             3.0             0\n",
       "500073    487781  A0210199       3000             4.0             0\n",
       "500074    487792  A0210824       1200             1.0             0\n",
       "\n",
       "[500075 rows x 5 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_toi_raw"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 주문일, 주문번호"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 데이터베이스 연결\n",
    "msdb_ = pymysql.connect(\n",
    "    user='orderherodl', # 추후 읽기 전용으로 수정 필요 \n",
    "    passwd='OhejGL@JFH2023',\n",
    "    host='orderherodl.cafe24.com',\n",
    "    db='orderherodl',\n",
    "    charset='utf8',\n",
    "#     use_unicode=True\n",
    ")\n",
    "\n",
    "\n",
    "my_sql = f\"\"\"\n",
    "SELECT tc.CUST_ID\n",
    ", tc.BUSINESS_NAME\n",
    ", DATE_FORMAT(tc.REG_DATE, '%Y-%m-%d')\n",
    ", tc.AREA_GU\n",
    ", tec.ER_CTG_NAME \n",
    ", to2.REG_DATE\n",
    ", to2.ORDER_NO\n",
    "FROM (SELECT * FROM TB_ORDER\n",
    "\t  WHERE REG_DATE >= '2022-11-01') to2 \n",
    "INNER JOIN (SELECT * FROM TB_CUST\n",
    "\t\t\tWHERE test_yn = 'N'\n",
    "\t\t\tAND DELIV_POSITION IS NOT NULL\n",
    "\t\t\tAND DELIV_POSITION != '') tc ON tc.CUST_ID = to2.CUST_ID\n",
    "LEFT JOIN TB_ER_CTG tec ON tec.ER_CTG_CD = tc.CTG_CD\n",
    "\"\"\"\n",
    "\n",
    "with msdb_.cursor() as cursor :\n",
    "    cursor.execute(my_sql)\n",
    "    result = cursor.fetchall()\n",
    "    msdb_.commit()\n",
    "    cursor.close()\n",
    "msdb_.close()\n",
    "\n",
    "    \n",
    "\n",
    "\n",
    "outlist = []\n",
    "for utf_ in result :\n",
    "    col1 = utf_[0].decode('UTF-8')\n",
    "    col2 = utf_[1].decode('UTF-8')\n",
    "    col3 = utf_[2].decode('UTF-8')\n",
    "    col4 = utf_[3].decode('UTF-8')\n",
    "    col5 = utf_[4].decode('UTF-8')\n",
    "    col6 = utf_[5]\n",
    "    col7 = utf_[6]\n",
    "   \n",
    "\n",
    "\n",
    "    outlist.append([col1, col2, col3, col4, col5, col6, col7])\n",
    "\n",
    "\n",
    "df_cust_order = pd.DataFrame(outlist, columns = ['CUST_ID', '매장명', '가입일', '지역구', '업종', '주문일', 'ORDER_NO'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>가입일</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>주문일</th>\n",
       "      <th>ORDER_NO</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>307095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>312235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>312237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>317128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174144</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174145</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174146</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>448009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174147</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-24</td>\n",
       "      <td>465085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174148</th>\n",
       "      <td>shtest</td>\n",
       "      <td>시흥mfc</td>\n",
       "      <td>2023-03-02</td>\n",
       "      <td>성동구</td>\n",
       "      <td>기타</td>\n",
       "      <td>2023-03-02</td>\n",
       "      <td>473656</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>174149 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         매장명         가입일  지역구        업종         주문일  \\\n",
       "0       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-01   \n",
       "1       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-04   \n",
       "2       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-04   \n",
       "3       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "4       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-09   \n",
       "...            ...         ...         ...  ...       ...         ...   \n",
       "174144  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "174145  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "174146  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "174147  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-24   \n",
       "174148      shtest       시흥mfc  2023-03-02  성동구        기타  2023-03-02   \n",
       "\n",
       "        ORDER_NO  \n",
       "0         307095  \n",
       "1         312235  \n",
       "2         312237  \n",
       "3         314288  \n",
       "4         317128  \n",
       "...          ...  \n",
       "174144    447909  \n",
       "174145    447988  \n",
       "174146    448009  \n",
       "174147    465085  \n",
       "174148    473656  \n",
       "\n",
       "[174149 rows x 7 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_order"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>가입일</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>주문일</th>\n",
       "      <th>ORDER_NO</th>\n",
       "      <th>PROD_CD</th>\n",
       "      <th>order_pay</th>\n",
       "      <th>prod_order_cnt</th>\n",
       "      <th>coupon_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>307095</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>312237</td>\n",
       "      <td>L0410060</td>\n",
       "      <td>10200.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>P0510362</td>\n",
       "      <td>8536.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>9380.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>317128</td>\n",
       "      <td>P0191121</td>\n",
       "      <td>5380.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489520</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>F0210145</td>\n",
       "      <td>62000.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489521</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>P0210463</td>\n",
       "      <td>20920.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489522</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447909</td>\n",
       "      <td>P9991165</td>\n",
       "      <td>2280.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489523</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447988</td>\n",
       "      <td>A9910008</td>\n",
       "      <td>5430.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489524</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>448009</td>\n",
       "      <td>A0110644</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479848 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         매장명         가입일  지역구        업종         주문일  \\\n",
       "0       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-01   \n",
       "2       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-04   \n",
       "3       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "4       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "5       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-09   \n",
       "...            ...         ...         ...  ...       ...         ...   \n",
       "489520  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489521  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489522  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489523  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489524  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "\n",
       "        ORDER_NO   PROD_CD  order_pay  prod_order_cnt  coupon_price  \n",
       "0         307095  A0210837    10850.0             3.0        3000.0  \n",
       "2         312237  L0410060    10200.0             3.0           0.0  \n",
       "3         314288  P0510362     8536.0             3.0           0.0  \n",
       "4         314288  A0210837     9380.0             3.0           0.0  \n",
       "5         317128  P0191121     5380.0             6.0           0.0  \n",
       "...          ...       ...        ...             ...           ...  \n",
       "489520    447908  F0210145    62000.0             1.9           0.0  \n",
       "489521    447908  P0210463    20920.0             1.0           0.0  \n",
       "489522    447909  P9991165     2280.0             5.0           0.0  \n",
       "489523    447988  A9910008     5430.0             2.0           0.0  \n",
       "489524    448009  A0110644    70000.0             2.0           0.0  \n",
       "\n",
       "[479848 rows x 11 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_order_prod = pd.merge(df_cust_order, df_toi_raw, how='left', on='ORDER_NO')\n",
    "df_order_cancel = df_cust_order_prod[df_cust_order_prod['PROD_CD'].isna()]\n",
    "df_cust_order_complete = df_cust_order_prod[~ df_cust_order_prod['PROD_CD'].isna()]\n",
    "df_cust_order_complete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>가입일</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>주문일</th>\n",
       "      <th>ORDER_NO</th>\n",
       "      <th>PROD_CD</th>\n",
       "      <th>order_pay</th>\n",
       "      <th>prod_order_cnt</th>\n",
       "      <th>coupon_price</th>\n",
       "      <th>매출</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>307095</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>29550.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>312237</td>\n",
       "      <td>L0410060</td>\n",
       "      <td>10200.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>P0510362</td>\n",
       "      <td>8536.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25608.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>9380.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>317128</td>\n",
       "      <td>P0191121</td>\n",
       "      <td>5380.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32280.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489520</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>F0210145</td>\n",
       "      <td>62000.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>117800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489521</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>P0210463</td>\n",
       "      <td>20920.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20920.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489522</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447909</td>\n",
       "      <td>P9991165</td>\n",
       "      <td>2280.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489523</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447988</td>\n",
       "      <td>A9910008</td>\n",
       "      <td>5430.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10860.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489524</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>448009</td>\n",
       "      <td>A0110644</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479848 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         매장명         가입일  지역구        업종         주문일  \\\n",
       "0       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-01   \n",
       "2       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-04   \n",
       "3       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "4       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "5       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-09   \n",
       "...            ...         ...         ...  ...       ...         ...   \n",
       "489520  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489521  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489522  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489523  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489524  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "\n",
       "        ORDER_NO   PROD_CD  order_pay  prod_order_cnt  coupon_price        매출  \n",
       "0         307095  A0210837    10850.0             3.0        3000.0   29550.0  \n",
       "2         312237  L0410060    10200.0             3.0           0.0   30600.0  \n",
       "3         314288  P0510362     8536.0             3.0           0.0   25608.0  \n",
       "4         314288  A0210837     9380.0             3.0           0.0   28140.0  \n",
       "5         317128  P0191121     5380.0             6.0           0.0   32280.0  \n",
       "...          ...       ...        ...             ...           ...       ...  \n",
       "489520    447908  F0210145    62000.0             1.9           0.0  117800.0  \n",
       "489521    447908  P0210463    20920.0             1.0           0.0   20920.0  \n",
       "489522    447909  P9991165     2280.0             5.0           0.0   11400.0  \n",
       "489523    447988  A9910008     5430.0             2.0           0.0   10860.0  \n",
       "489524    448009  A0110644    70000.0             2.0           0.0  140000.0  \n",
       "\n",
       "[479848 rows x 12 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_order_complete['매출'] = df_cust_order_complete['order_pay'] * df_cust_order_complete['prod_order_cnt'] - df_cust_order_complete['coupon_price']\n",
    "df_cust_order_complete"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 업장의 주문일별 매출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 102891 entries, 0 to 102890\n",
      "Data columns (total 7 columns):\n",
      " #   Column   Non-Null Count   Dtype  \n",
      "---  ------   --------------   -----  \n",
      " 0   CUST_ID  102891 non-null  object \n",
      " 1   매장명      102891 non-null  object \n",
      " 2   가입일      102891 non-null  object \n",
      " 3   지역구      102891 non-null  object \n",
      " 4   업종       102891 non-null  object \n",
      " 5   주문일      102891 non-null  object \n",
      " 6   매출       102891 non-null  float64\n",
      "dtypes: float64(1), object(6)\n",
      "memory usage: 5.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df_cust_orderday = df_cust_order_complete[['CUST_ID', '매장명', '가입일', '지역구', '업종', '주문일', '매출']].groupby(['CUST_ID', '매장명', '가입일', '지역구', '업종', '주문일'], as_index=0).sum()\n",
    "df_cust_orderday.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>가입일</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>주문일</th>\n",
       "      <th>매출</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>29550.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>30600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>53748.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>53400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-22</td>\n",
       "      <td>179256.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102886</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-08</td>\n",
       "      <td>413760.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102887</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-09</td>\n",
       "      <td>352370.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102888</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-10</td>\n",
       "      <td>2138420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102889</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-12</td>\n",
       "      <td>602390.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102890</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>723180.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>102891 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         매장명         가입일  지역구        업종        주문일  \\\n",
       "0       1010629807    채선당성동구청점  2021-04-20  성동구        한식 2022-11-01   \n",
       "1       1010629807    채선당성동구청점  2021-04-20  성동구        한식 2022-11-04   \n",
       "2       1010629807    채선당성동구청점  2021-04-20  성동구        한식 2022-11-07   \n",
       "3       1010629807    채선당성동구청점  2021-04-20  성동구        한식 2022-11-09   \n",
       "4       1010629807    채선당성동구청점  2021-04-20  성동구        한식 2022-11-22   \n",
       "...            ...         ...         ...  ...       ...        ...   \n",
       "102886  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치 2023-02-08   \n",
       "102887  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치 2023-02-09   \n",
       "102888  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치 2023-02-10   \n",
       "102889  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치 2023-02-12   \n",
       "102890  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치 2023-02-13   \n",
       "\n",
       "               매출  \n",
       "0         29550.0  \n",
       "1         30600.0  \n",
       "2         53748.0  \n",
       "3         53400.0  \n",
       "4        179256.0  \n",
       "...           ...  \n",
       "102886   413760.0  \n",
       "102887   352370.0  \n",
       "102888  2138420.0  \n",
       "102889   602390.0  \n",
       "102890   723180.0  \n",
       "\n",
       "[102891 rows x 7 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_orderday['주문일'] = pd.to_datetime(df_cust_orderday['주문일'])\n",
    "df_cust_orderday"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_pg_sales_history['sales_date_ymd'] = df_pg_sales_history['sales_date'].dt.strftime('%Y-%m-%d')\n",
    "df_pg_sales_history['sales_date'] = pd.to_datetime(df_pg_sales_history['sales_date'])\n",
    "df_pg_sales_history['sales_date_ymd'] = pd.to_datetime(df_pg_sales_history['sales_date_ymd'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID sales_date_ymd activity_option sales_activities\n",
       "0         1  2108701169     2023-01-12           품목 확장             품목수취\n",
       "1         2  0105639738     2023-01-17           품목 확장             품목수취\n",
       "2         3  1585900160     2023-01-17           오더 체크             단순방문\n",
       "3         6  8890302509     2023-01-17           고객 케어             단순방문\n",
       "4         7  2023165563     2023-01-17           품목 확장             품목수취"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pg_sales_3col = df_pg_sales_history[['sales_no', 'cust_id', 'sales_date_ymd', 'activity_option', 'sales_activities']]\n",
    "df_pg_sales_3col.columns = ['sales_no','CUST_ID', 'sales_date_ymd', 'activity_option', 'sales_activities']\n",
    "df_pg_sales_3col.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "116"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_pg_sales_3col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "from datetime import datetime, timedelta\n",
    "start_p7 = df_pg_sales_3col.loc[0,'sales_date_ymd'] \n",
    "end_p7 = df_pg_sales_3col.loc[0,'sales_date_ymd'] + timedelta(days=6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2023-01-12 00:00:00\n",
      "2023-01-18 00:00:00\n"
     ]
    }
   ],
   "source": [
    "print(start_p7)\n",
    "print(end_p7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "790420.0"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp_df = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p7) & (df_cust_orderday['주문일'] <= end_p7) & (df_cust_orderday['CUST_ID']== '2108701169')]\n",
    "temp_df['매출'].sum()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 주차별 매출 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ragne_sales(df):\n",
    "    sales_no_list = []\n",
    "    cust_id_list = []\n",
    "    sales_param_list = []\n",
    "    activities_list = []\n",
    "    activ_day_list = []\n",
    "\n",
    "    p1w_sales_list = []\n",
    "    p2w_sales_list = []\n",
    "    p3w_sales_list = []\n",
    "    p4w_sales_list = []\n",
    "    p5w_sales_list = []\n",
    "    p6w_sales_list = []\n",
    "    p7w_sales_list = []\n",
    "    p8w_sales_list = []\n",
    "\n",
    "    m1w_sales_list = []\n",
    "    m2w_sales_list = []\n",
    "    m3w_sales_list = []\n",
    "    m4w_sales_list = []\n",
    "    m5w_sales_list = []\n",
    "    m6w_sales_list = []\n",
    "    m7w_sales_list = []\n",
    "    m8w_sales_list = []\n",
    "\n",
    "    for i in range(len(df)):\n",
    "\n",
    "        ## 세일링 이후\n",
    "\n",
    "        start_p1w = df.loc[i,'sales_date_ymd'] \n",
    "        end_p1w = df.loc[i,'sales_date_ymd'] + timedelta(days=6)\n",
    "        temp_df_p1w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p1w) & (df_cust_orderday['주문일'] <= end_p1w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p1w_sales = temp_df_p1w['매출'].sum()\n",
    "\n",
    "        start_p2w = df.loc[i,'sales_date_ymd'] + timedelta(days=7)\n",
    "        end_p2w = df.loc[i,'sales_date_ymd'] + timedelta(days=13)\n",
    "        temp_df_p2w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p2w) & (df_cust_orderday['주문일'] <= end_p2w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p2w_sales = temp_df_p2w['매출'].sum()\n",
    "\n",
    "        start_p3w = df.loc[i,'sales_date_ymd'] + timedelta(days=14)\n",
    "        end_p3w = df.loc[i,'sales_date_ymd'] + timedelta(days=20)\n",
    "        temp_df_p3w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p3w) & (df_cust_orderday['주문일'] <= end_p3w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p3w_sales = temp_df_p3w['매출'].sum()\n",
    "\n",
    "        start_p4w = df.loc[i,'sales_date_ymd'] + timedelta(days=21)\n",
    "        end_p4w = df.loc[i,'sales_date_ymd'] + timedelta(days=27)\n",
    "        temp_df_p4w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p4w) & (df_cust_orderday['주문일'] <= end_p4w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p4w_sales = temp_df_p4w['매출'].sum()\n",
    "\n",
    "        start_p5w = df.loc[i,'sales_date_ymd'] + timedelta(days=28)\n",
    "        end_p5w = df.loc[i,'sales_date_ymd'] + timedelta(days=34)\n",
    "        temp_df_p5w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p5w) & (df_cust_orderday['주문일'] <= end_p5w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p5w_sales = temp_df_p5w['매출'].sum()\n",
    "\n",
    "        start_p6w = df.loc[i,'sales_date_ymd'] + timedelta(days=35)\n",
    "        end_p6w = df.loc[i,'sales_date_ymd'] + timedelta(days=41)\n",
    "        temp_df_p6w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p6w) & (df_cust_orderday['주문일'] <= end_p6w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p6w_sales = temp_df_p6w['매출'].sum()\n",
    "\n",
    "        start_p7w = df.loc[i,'sales_date_ymd'] + timedelta(days=42)\n",
    "        end_p7w = df.loc[i,'sales_date_ymd'] + timedelta(days=48)\n",
    "        temp_df_p7w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p7w) & (df_cust_orderday['주문일'] <= end_p7w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p7w_sales = temp_df_p7w['매출'].sum()\n",
    "\n",
    "        start_p8w = df.loc[i,'sales_date_ymd'] + timedelta(days=49)\n",
    "        end_p8w = df.loc[i,'sales_date_ymd'] + timedelta(days=55)\n",
    "        temp_df_p8w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_p8w) & (df_cust_orderday['주문일'] <= end_p8w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p8w_sales = temp_df_p8w['매출'].sum()\n",
    "\n",
    "\n",
    "        ## 세일링 이전 \n",
    "\n",
    "        start_m1w = df.loc[i,'sales_date_ymd'] - timedelta(days=7)\n",
    "        end_m1w = df.loc[i,'sales_date_ymd'] - timedelta(days=1)\n",
    "        temp_df_m1w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m1w) & (df_cust_orderday['주문일'] <= end_m1w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m1w_sales = temp_df_m1w['매출'].sum()\n",
    "\n",
    "        start_m2w = df.loc[i,'sales_date_ymd'] - timedelta(days=14)\n",
    "        end_m2w = df.loc[i,'sales_date_ymd'] - timedelta(days=8)\n",
    "        temp_df_m2w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m2w) & (df_cust_orderday['주문일'] <= end_m2w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m2w_sales = temp_df_m2w['매출'].sum()\n",
    "\n",
    "        start_m3w = df.loc[i,'sales_date_ymd'] - timedelta(days=21)\n",
    "        end_m3w = df.loc[i,'sales_date_ymd'] - timedelta(days=15)\n",
    "        temp_df_m3w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m3w) & (df_cust_orderday['주문일'] <= end_m3w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m3w_sales = temp_df_m3w['매출'].sum()\n",
    "\n",
    "        start_m4w = df.loc[i,'sales_date_ymd'] - timedelta(days=28)\n",
    "        end_m4w = df.loc[i,'sales_date_ymd'] - timedelta(days=22)\n",
    "        temp_df_m4w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m4w) & (df_cust_orderday['주문일'] <= end_m4w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m4w_sales = temp_df_m4w['매출'].sum()\n",
    "\n",
    "        start_m5w = df.loc[i,'sales_date_ymd'] - timedelta(days=35)\n",
    "        end_m5w = df.loc[i,'sales_date_ymd'] - timedelta(days=29)\n",
    "        temp_df_m5w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m5w) & (df_cust_orderday['주문일'] <= end_m5w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m5w_sales = temp_df_m5w['매출'].sum()\n",
    "\n",
    "        start_m6w = df.loc[i,'sales_date_ymd'] - timedelta(days=42)\n",
    "        end_m6w = df.loc[i,'sales_date_ymd'] - timedelta(days=36)\n",
    "        temp_df_m6w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m6w) & (df_cust_orderday['주문일'] <= end_m6w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m6w_sales = temp_df_m6w['매출'].sum()\n",
    "\n",
    "        start_m7w = df.loc[i,'sales_date_ymd'] - timedelta(days=49)\n",
    "        end_m7w = df.loc[i,'sales_date_ymd'] - timedelta(days=43)\n",
    "        temp_df_m7w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m7w) & (df_cust_orderday['주문일'] <= end_m7w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m7w_sales = temp_df_m7w['매출'].sum()\n",
    "\n",
    "        start_m8w = df.loc[i,'sales_date_ymd'] - timedelta(days=56)\n",
    "        end_m8w = df.loc[i,'sales_date_ymd'] - timedelta(days=50)\n",
    "        temp_df_m8w = df_cust_orderday[(df_cust_orderday['주문일'] >= start_m8w) & (df_cust_orderday['주문일'] <= end_m8w) & (df_cust_orderday['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m8w_sales = temp_df_m8w['매출'].sum()\n",
    "\n",
    "\n",
    "        ## 값 리스트에 넣기\n",
    "\n",
    "        sales_no_list.append(df.loc[i, 'sales_no'])\n",
    "        cust_id_list.append(df.loc[i,'CUST_ID'])\n",
    "        sales_param_list.append(df.loc[i, 'activity_option'])\n",
    "        activ_day_list.append(df.loc[i, 'sales_date_ymd'])\n",
    "        activities_list.append(df.loc[i, 'sales_activities'])\n",
    "\n",
    "        p1w_sales_list.append(p1w_sales)\n",
    "        p2w_sales_list.append(p2w_sales)\n",
    "        p3w_sales_list.append(p3w_sales)\n",
    "        p4w_sales_list.append(p4w_sales)\n",
    "        p5w_sales_list.append(p5w_sales)\n",
    "        p6w_sales_list.append(p6w_sales)\n",
    "        p7w_sales_list.append(p7w_sales)\n",
    "        p8w_sales_list.append(p8w_sales)\n",
    "\n",
    "        m1w_sales_list.append(m1w_sales)\n",
    "        m2w_sales_list.append(m2w_sales)\n",
    "        m3w_sales_list.append(m3w_sales)\n",
    "        m4w_sales_list.append(m4w_sales)\n",
    "        m5w_sales_list.append(m5w_sales)\n",
    "        m6w_sales_list.append(m6w_sales)\n",
    "        m7w_sales_list.append(m7w_sales)\n",
    "        m8w_sales_list.append(m8w_sales)\n",
    "\n",
    "\n",
    "    ## DF 생성\n",
    "    df_range_sales = pd.DataFrame( {'sales_no' : sales_no_list\n",
    "                                        , 'CUST_ID' : cust_id_list\n",
    "                                        , 'activity_option' : sales_param_list\n",
    "                                        , 'sales_activities' : activities_list\n",
    "                                        , 'sales_date_ymd' : activ_day_list\n",
    "                                        , 'm8w_sales' : m8w_sales_list\n",
    "                                        , 'm7w_sales' : m7w_sales_list\n",
    "                                        , 'm6w_sales' : m6w_sales_list\n",
    "                                        , 'm5w_sales' : m5w_sales_list\n",
    "                                        , 'm4w_sales' : m4w_sales_list\n",
    "                                        , 'm3w_sales' : m3w_sales_list\n",
    "                                        , 'm2w_sales' : m2w_sales_list\n",
    "                                        , 'm1w_sales' : m1w_sales_list        \n",
    "                                        , 'p1w_sales' : p1w_sales_list\n",
    "                                        , 'p2w_sales' : p2w_sales_list\n",
    "                                        , 'p3w_sales' : p3w_sales_list\n",
    "                                        , 'p4w_sales' : p4w_sales_list\n",
    "                                        , 'p5w_sales' : p5w_sales_list\n",
    "                                        , 'p6w_sales' : p6w_sales_list\n",
    "                                        , 'p7w_sales' : p7w_sales_list\n",
    "                                        , 'p8w_sales' : p8w_sales_list\n",
    "                                        }\n",
    "                                    )\n",
    "        \n",
    "    return df_range_sales\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "cust_sales_pg = ragne_sales(df_pg_sales_3col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sales</th>\n",
       "      <th>m7w_sales</th>\n",
       "      <th>m6w_sales</th>\n",
       "      <th>m5w_sales</th>\n",
       "      <th>m4w_sales</th>\n",
       "      <th>m3w_sales</th>\n",
       "      <th>m2w_sales</th>\n",
       "      <th>m1w_sales</th>\n",
       "      <th>p1w_sales</th>\n",
       "      <th>p2w_sales</th>\n",
       "      <th>p3w_sales</th>\n",
       "      <th>p4w_sales</th>\n",
       "      <th>p5w_sales</th>\n",
       "      <th>p6w_sales</th>\n",
       "      <th>p7w_sales</th>\n",
       "      <th>p8w_sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>1052871.0</td>\n",
       "      <td>2070408.0</td>\n",
       "      <td>475570.0</td>\n",
       "      <td>1542820.0</td>\n",
       "      <td>110620.0</td>\n",
       "      <td>1184730.0</td>\n",
       "      <td>629400.0</td>\n",
       "      <td>854540.0</td>\n",
       "      <td>790420.0</td>\n",
       "      <td>390090.0</td>\n",
       "      <td>883020.0</td>\n",
       "      <td>441350.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1488960.0</td>\n",
       "      <td>324750.0</td>\n",
       "      <td>691780.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>427650.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>59780.0</td>\n",
       "      <td>18400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>1306377.0</td>\n",
       "      <td>905276.0</td>\n",
       "      <td>400520.0</td>\n",
       "      <td>743010.0</td>\n",
       "      <td>630380.0</td>\n",
       "      <td>760620.0</td>\n",
       "      <td>610730.0</td>\n",
       "      <td>766350.0</td>\n",
       "      <td>1075660.0</td>\n",
       "      <td>879900.0</td>\n",
       "      <td>681800.0</td>\n",
       "      <td>1471480.0</td>\n",
       "      <td>600510.0</td>\n",
       "      <td>1274240.0</td>\n",
       "      <td>812600.0</td>\n",
       "      <td>363830.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>579910.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID activity_option sales_activities sales_date_ymd  \\\n",
       "0         1  2108701169           품목 확장             품목수취     2023-01-12   \n",
       "1         2  0105639738           품목 확장             품목수취     2023-01-17   \n",
       "2         3  1585900160           오더 체크             단순방문     2023-01-17   \n",
       "3         6  8890302509           고객 케어             단순방문     2023-01-17   \n",
       "4         7  2023165563           품목 확장             품목수취     2023-01-17   \n",
       "\n",
       "   m8w_sales  m7w_sales  m6w_sales  m5w_sales  m4w_sales  m3w_sales  \\\n",
       "0  1052871.0  2070408.0   475570.0  1542820.0   110620.0  1184730.0   \n",
       "1        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "2        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "3  1306377.0   905276.0   400520.0   743010.0   630380.0   760620.0   \n",
       "4   533195.0   679094.0   904550.0   883610.0   950810.0   913590.0   \n",
       "\n",
       "   m2w_sales  m1w_sales  p1w_sales  p2w_sales  p3w_sales  p4w_sales  \\\n",
       "0   629400.0   854540.0   790420.0   390090.0   883020.0   441350.0   \n",
       "1        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "2        0.0   427650.0        0.0    59780.0    18400.0        0.0   \n",
       "3   610730.0   766350.0  1075660.0   879900.0   681800.0  1471480.0   \n",
       "4   781520.0  1105030.0   579250.0   870510.0   759120.0   753100.0   \n",
       "\n",
       "   p5w_sales  p6w_sales  p7w_sales  p8w_sales  \n",
       "0        0.0  1488960.0   324750.0   691780.0  \n",
       "1        0.0        0.0        0.0        0.0  \n",
       "2        0.0        0.0        0.0        0.0  \n",
       "3   600510.0  1274240.0   812600.0   363830.0  \n",
       "4   801620.0  1337590.0   624120.0   579910.0  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_sales_pg.head()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 주차별 SKU 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>매장명</th>\n",
       "      <th>가입일</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>주문일</th>\n",
       "      <th>ORDER_NO</th>\n",
       "      <th>PROD_CD</th>\n",
       "      <th>order_pay</th>\n",
       "      <th>prod_order_cnt</th>\n",
       "      <th>coupon_price</th>\n",
       "      <th>매출</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>307095</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>29550.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>312237</td>\n",
       "      <td>L0410060</td>\n",
       "      <td>10200.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>P0510362</td>\n",
       "      <td>8536.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25608.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>314288</td>\n",
       "      <td>A0210837</td>\n",
       "      <td>9380.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>채선당성동구청점</td>\n",
       "      <td>2021-04-20</td>\n",
       "      <td>성동구</td>\n",
       "      <td>한식</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>317128</td>\n",
       "      <td>P0191121</td>\n",
       "      <td>5380.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32280.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489520</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>F0210145</td>\n",
       "      <td>62000.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>117800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489521</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447908</td>\n",
       "      <td>P0210463</td>\n",
       "      <td>20920.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20920.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489522</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447909</td>\n",
       "      <td>P9991165</td>\n",
       "      <td>2280.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489523</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>447988</td>\n",
       "      <td>A9910008</td>\n",
       "      <td>5430.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10860.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489524</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>르베지왕잠실(임시)</td>\n",
       "      <td>2022-10-25</td>\n",
       "      <td>송파구</td>\n",
       "      <td>샐러드/샌드위치</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>448009</td>\n",
       "      <td>A0110644</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479848 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         매장명         가입일  지역구        업종         주문일  \\\n",
       "0       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-01   \n",
       "2       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-04   \n",
       "3       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "4       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-07   \n",
       "5       1010629807    채선당성동구청점  2021-04-20  성동구        한식  2022-11-09   \n",
       "...            ...         ...         ...  ...       ...         ...   \n",
       "489520  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489521  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489522  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489523  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "489524  levegiwang  르베지왕잠실(임시)  2022-10-25  송파구  샐러드/샌드위치  2023-02-13   \n",
       "\n",
       "        ORDER_NO   PROD_CD  order_pay  prod_order_cnt  coupon_price        매출  \n",
       "0         307095  A0210837    10850.0             3.0        3000.0   29550.0  \n",
       "2         312237  L0410060    10200.0             3.0           0.0   30600.0  \n",
       "3         314288  P0510362     8536.0             3.0           0.0   25608.0  \n",
       "4         314288  A0210837     9380.0             3.0           0.0   28140.0  \n",
       "5         317128  P0191121     5380.0             6.0           0.0   32280.0  \n",
       "...          ...       ...        ...             ...           ...       ...  \n",
       "489520    447908  F0210145    62000.0             1.9           0.0  117800.0  \n",
       "489521    447908  P0210463    20920.0             1.0           0.0   20920.0  \n",
       "489522    447909  P9991165     2280.0             5.0           0.0   11400.0  \n",
       "489523    447988  A9910008     5430.0             2.0           0.0   10860.0  \n",
       "489524    448009  A0110644    70000.0             2.0           0.0  140000.0  \n",
       "\n",
       "[479848 rows x 12 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_order_complete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_cust_sku = df_cust_order_complete[['CUST_ID', '주문일', 'PROD_CD']]\n",
    "df_cust_sku.reset_index(inplace=True, drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>주문일</th>\n",
       "      <th>PROD_CD</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>A0210837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>L0410060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>P0510362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>2022-11-07</td>\n",
       "      <td>A0210837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1010629807</td>\n",
       "      <td>2022-11-09</td>\n",
       "      <td>P0191121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479843</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>F0210145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479844</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>P0210463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479845</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>P9991165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479846</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>A9910008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479847</th>\n",
       "      <td>levegiwang</td>\n",
       "      <td>2023-02-13</td>\n",
       "      <td>A0110644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>479848 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CUST_ID         주문일   PROD_CD\n",
       "0       1010629807  2022-11-01  A0210837\n",
       "1       1010629807  2022-11-04  L0410060\n",
       "2       1010629807  2022-11-07  P0510362\n",
       "3       1010629807  2022-11-07  A0210837\n",
       "4       1010629807  2022-11-09  P0191121\n",
       "...            ...         ...       ...\n",
       "479843  levegiwang  2023-02-13  F0210145\n",
       "479844  levegiwang  2023-02-13  P0210463\n",
       "479845  levegiwang  2023-02-13  P9991165\n",
       "479846  levegiwang  2023-02-13  A9910008\n",
       "479847  levegiwang  2023-02-13  A0110644\n",
       "\n",
       "[479848 rows x 3 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cust_sku"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ragne_sku(df):\n",
    "    cust_id_list = []\n",
    "    sales_no_list = []\n",
    "    sku_param_list = []\n",
    "    activities_list = []\n",
    "    activ_day_list = []\n",
    "\n",
    "    p1w_sku_list = []\n",
    "    p2w_sku_list = []\n",
    "    p3w_sku_list = []\n",
    "    p4w_sku_list = []\n",
    "    p5w_sku_list = []\n",
    "    p6w_sku_list = []\n",
    "    p7w_sku_list = []\n",
    "    p8w_sku_list = []\n",
    "\n",
    "    m1w_sku_list = []\n",
    "    m2w_sku_list = []\n",
    "    m3w_sku_list = []\n",
    "    m4w_sku_list = []\n",
    "    m5w_sku_list = []\n",
    "    m6w_sku_list = []\n",
    "    m7w_sku_list = []\n",
    "    m8w_sku_list = []\n",
    "\n",
    "    for i in range(len(df)):\n",
    "\n",
    "        ## 세일링 이후\n",
    "\n",
    "        start_p1w = df.loc[i,'sales_date_ymd'] \n",
    "        end_p1w = df.loc[i,'sales_date_ymd'] + timedelta(days=6)\n",
    "        temp_df_p1w = df_cust_sku[(df_cust_sku['주문일'] >= start_p1w) & (df_cust_sku['주문일'] <= end_p1w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p1w_sku = temp_df_p1w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p2w = df.loc[i,'sales_date_ymd'] + timedelta(days=7)\n",
    "        end_p2w = df.loc[i,'sales_date_ymd'] + timedelta(days=13)\n",
    "        temp_df_p2w = df_cust_sku[(df_cust_sku['주문일'] >= start_p2w) & (df_cust_sku['주문일'] <= end_p2w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p2w_sku = temp_df_p2w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p3w = df.loc[i,'sales_date_ymd'] + timedelta(days=14)\n",
    "        end_p3w = df.loc[i,'sales_date_ymd'] + timedelta(days=20)\n",
    "        temp_df_p3w = df_cust_sku[(df_cust_sku['주문일'] >= start_p3w) & (df_cust_sku['주문일'] <= end_p3w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p3w_sku = temp_df_p3w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p4w = df.loc[i,'sales_date_ymd'] + timedelta(days=21)\n",
    "        end_p4w = df.loc[i,'sales_date_ymd'] + timedelta(days=27)\n",
    "        temp_df_p4w = df_cust_sku[(df_cust_sku['주문일'] >= start_p4w) & (df_cust_sku['주문일'] <= end_p4w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p4w_sku = temp_df_p4w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p5w = df.loc[i,'sales_date_ymd'] + timedelta(days=28)\n",
    "        end_p5w = df.loc[i,'sales_date_ymd'] + timedelta(days=34)\n",
    "        temp_df_p5w = df_cust_sku[(df_cust_sku['주문일'] >= start_p5w) & (df_cust_sku['주문일'] <= end_p5w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p5w_sku = temp_df_p5w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p6w = df.loc[i,'sales_date_ymd'] + timedelta(days=35)\n",
    "        end_p6w = df.loc[i,'sales_date_ymd'] + timedelta(days=41)\n",
    "        temp_df_p6w = df_cust_sku[(df_cust_sku['주문일'] >= start_p6w) & (df_cust_sku['주문일'] <= end_p6w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p6w_sku = temp_df_p6w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p7w = df.loc[i,'sales_date_ymd'] + timedelta(days=42)\n",
    "        end_p7w = df.loc[i,'sales_date_ymd'] + timedelta(days=48)\n",
    "        temp_df_p7w = df_cust_sku[(df_cust_sku['주문일'] >= start_p7w) & (df_cust_sku['주문일'] <= end_p7w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p7w_sku = temp_df_p7w['PROD_CD'].nunique()\n",
    "\n",
    "        start_p8w = df.loc[i,'sales_date_ymd'] + timedelta(days=49)\n",
    "        end_p8w = df.loc[i,'sales_date_ymd'] + timedelta(days=55)\n",
    "        temp_df_p8w = df_cust_sku[(df_cust_sku['주문일'] >= start_p8w) & (df_cust_sku['주문일'] <= end_p8w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        p8w_sku = temp_df_p8w['PROD_CD'].nunique()\n",
    "\n",
    "\n",
    "        ## 세일링 이전 \n",
    "\n",
    "        start_m1w = df.loc[i,'sales_date_ymd'] - timedelta(days=7)\n",
    "        end_m1w = df.loc[i,'sales_date_ymd'] - timedelta(days=1)\n",
    "        temp_df_m1w = df_cust_sku[(df_cust_sku['주문일'] >= start_m1w) & (df_cust_sku['주문일'] <= end_m1w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m1w_sku = temp_df_m1w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m2w = df.loc[i,'sales_date_ymd'] - timedelta(days=14)\n",
    "        end_m2w = df.loc[i,'sales_date_ymd'] - timedelta(days=8)\n",
    "        temp_df_m2w = df_cust_sku[(df_cust_sku['주문일'] >= start_m2w) & (df_cust_sku['주문일'] <= end_m2w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m2w_sku = temp_df_m2w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m3w = df.loc[i,'sales_date_ymd'] - timedelta(days=21)\n",
    "        end_m3w = df.loc[i,'sales_date_ymd'] - timedelta(days=15)\n",
    "        temp_df_m3w = df_cust_sku[(df_cust_sku['주문일'] >= start_m3w) & (df_cust_sku['주문일'] <= end_m3w) & (df_cust_sku['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m3w_sku = temp_df_m3w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m4w = df.loc[i,'sales_date_ymd'] - timedelta(days=28)\n",
    "        end_m4w = df.loc[i,'sales_date_ymd'] - timedelta(days=22)\n",
    "        temp_df_m4w = df_cust_order_complete[(df_cust_order_complete['주문일'] >= start_m4w) & (df_cust_order_complete['주문일'] <= end_m4w) & (df_cust_order_complete['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m4w_sku = temp_df_m4w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m5w = df.loc[i,'sales_date_ymd'] - timedelta(days=35)\n",
    "        end_m5w = df.loc[i,'sales_date_ymd'] - timedelta(days=29)\n",
    "        temp_df_m5w = df_cust_order_complete[(df_cust_order_complete['주문일'] >= start_m5w) & (df_cust_order_complete['주문일'] <= end_m5w) & (df_cust_order_complete['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m5w_sku = temp_df_m5w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m6w = df.loc[i,'sales_date_ymd'] - timedelta(days=42)\n",
    "        end_m6w = df.loc[i,'sales_date_ymd'] - timedelta(days=36)\n",
    "        temp_df_m6w = df_cust_order_complete[(df_cust_order_complete['주문일'] >= start_m6w) & (df_cust_order_complete['주문일'] <= end_m6w) & (df_cust_order_complete['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m6w_sku = temp_df_m6w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m7w = df.loc[i,'sales_date_ymd'] - timedelta(days=49)\n",
    "        end_m7w = df.loc[i,'sales_date_ymd'] - timedelta(days=43)\n",
    "        temp_df_m7w = df_cust_order_complete[(df_cust_order_complete['주문일'] >= start_m7w) & (df_cust_order_complete['주문일'] <= end_m7w) & (df_cust_order_complete['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m7w_sku = temp_df_m7w['PROD_CD'].nunique()\n",
    "\n",
    "        start_m8w = df.loc[i,'sales_date_ymd'] - timedelta(days=56)\n",
    "        end_m8w = df.loc[i,'sales_date_ymd'] - timedelta(days=50)\n",
    "        temp_df_m8w = df_cust_order_complete[(df_cust_order_complete['주문일'] >= start_m8w) & (df_cust_order_complete['주문일'] <= end_m8w) & (df_cust_order_complete['CUST_ID']== df.loc[i,'CUST_ID'])]\n",
    "        m8w_sku = temp_df_m8w['PROD_CD'].nunique()\n",
    "\n",
    "\n",
    "        ## 값 리스트에 넣기\n",
    "\n",
    "        cust_id_list.append(df.loc[i,'CUST_ID'])\n",
    "        sales_no_list.append(df.loc[i, 'sales_no'])\n",
    "        sku_param_list.append(df.loc[i, 'activity_option'])\n",
    "        activities_list.append(df.loc[i, 'sales_activities'])\n",
    "        activ_day_list.append(df.loc[i, 'sales_date_ymd'])\n",
    "\n",
    "        p1w_sku_list.append(p1w_sku)\n",
    "        p2w_sku_list.append(p2w_sku)\n",
    "        p3w_sku_list.append(p3w_sku)\n",
    "        p4w_sku_list.append(p4w_sku)\n",
    "        p5w_sku_list.append(p5w_sku)\n",
    "        p6w_sku_list.append(p6w_sku)\n",
    "        p7w_sku_list.append(p7w_sku)\n",
    "        p8w_sku_list.append(p8w_sku)\n",
    "\n",
    "        m1w_sku_list.append(m1w_sku)\n",
    "        m2w_sku_list.append(m2w_sku)\n",
    "        m3w_sku_list.append(m3w_sku)\n",
    "        m4w_sku_list.append(m4w_sku)\n",
    "        m5w_sku_list.append(m5w_sku)\n",
    "        m6w_sku_list.append(m6w_sku)\n",
    "        m7w_sku_list.append(m7w_sku)\n",
    "        m8w_sku_list.append(m8w_sku)\n",
    "\n",
    "\n",
    "    ## DF 생성\n",
    "    df_range_sku = pd.DataFrame( {'sales_no' : sales_no_list\n",
    "                                        , 'CUST_ID' : cust_id_list\n",
    "                                        , 'activity_option' : sku_param_list\n",
    "                                        , 'sales_activities' : activities_list\n",
    "                                        , 'sales_date_ymd' : activ_day_list\n",
    "                                        , 'm8w_sku' : m8w_sku_list\n",
    "                                        , 'm7w_sku' : m7w_sku_list\n",
    "                                        , 'm6w_sku' : m6w_sku_list\n",
    "                                        , 'm5w_sku' : m5w_sku_list\n",
    "                                        , 'm4w_sku' : m4w_sku_list\n",
    "                                        , 'm3w_sku' : m3w_sku_list\n",
    "                                        , 'm2w_sku' : m2w_sku_list\n",
    "                                        , 'm1w_sku' : m1w_sku_list        \n",
    "                                        , 'p1w_sku' : p1w_sku_list\n",
    "                                        , 'p2w_sku' : p2w_sku_list\n",
    "                                        , 'p3w_sku' : p3w_sku_list\n",
    "                                        , 'p4w_sku' : p4w_sku_list\n",
    "                                        , 'p5w_sku' : p5w_sku_list\n",
    "                                        , 'p6w_sku' : p6w_sku_list\n",
    "                                        , 'p7w_sku' : p7w_sku_list\n",
    "                                        , 'p8w_sku' : p8w_sku_list\n",
    "                                        }\n",
    "                                    )\n",
    "        \n",
    "    return df_range_sku\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "cust_sku_pg = ragne_sku(df_pg_sales_3col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sku</th>\n",
       "      <th>m7w_sku</th>\n",
       "      <th>m6w_sku</th>\n",
       "      <th>m5w_sku</th>\n",
       "      <th>m4w_sku</th>\n",
       "      <th>m3w_sku</th>\n",
       "      <th>m2w_sku</th>\n",
       "      <th>m1w_sku</th>\n",
       "      <th>p1w_sku</th>\n",
       "      <th>p2w_sku</th>\n",
       "      <th>p3w_sku</th>\n",
       "      <th>p4w_sku</th>\n",
       "      <th>p5w_sku</th>\n",
       "      <th>p6w_sku</th>\n",
       "      <th>p7w_sku</th>\n",
       "      <th>p8w_sku</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>31</td>\n",
       "      <td>25</td>\n",
       "      <td>10</td>\n",
       "      <td>29</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>16</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>27</td>\n",
       "      <td>24</td>\n",
       "      <td>33</td>\n",
       "      <td>30</td>\n",
       "      <td>37</td>\n",
       "      <td>33</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>26</td>\n",
       "      <td>28</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID activity_option sales_activities sales_date_ymd  \\\n",
       "0         1  2108701169           품목 확장             품목수취     2023-01-12   \n",
       "1         2  0105639738           품목 확장             품목수취     2023-01-17   \n",
       "2         3  1585900160           오더 체크             단순방문     2023-01-17   \n",
       "3         6  8890302509           고객 케어             단순방문     2023-01-17   \n",
       "4         7  2023165563           품목 확장             품목수취     2023-01-17   \n",
       "\n",
       "   m8w_sku  m7w_sku  m6w_sku  m5w_sku  m4w_sku  m3w_sku  m2w_sku  m1w_sku  \\\n",
       "0        9        4        4        4        3       11        1        4   \n",
       "1        0        0        0        0        0        0        0        0   \n",
       "2        0        0        0        0        0        0        0       33   \n",
       "3       31       25       10       29       24       24       16       24   \n",
       "4        8       31       22       25       25       25       21       29   \n",
       "\n",
       "   p1w_sku  p2w_sku  p3w_sku  p4w_sku  p5w_sku  p6w_sku  p7w_sku  p8w_sku  \n",
       "0        4        2        4        2        0        8        3        2  \n",
       "1        0        0        0        0        0        0        0        0  \n",
       "2        0        5        2        0        0        0        0        0  \n",
       "3       29       27       24       33       30       37       33       15  \n",
       "4       18       24       23       23       28       26       28       18  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_sku_pg.head()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Merge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>cust_id</th>\n",
       "      <th>sales_date</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>count</th>\n",
       "      <th>process_state</th>\n",
       "      <th>sales_cost</th>\n",
       "      <th>detail_memo</th>\n",
       "      <th>unique_memo</th>\n",
       "      <th>insert_id</th>\n",
       "      <th>insert_date</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>2023-01-12 12:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>품목 확장 목적 방문 / 1.17일 추가 미팅예정</td>\n",
       "      <td></td>\n",
       "      <td>messi</td>\n",
       "      <td>2023-01-17 11:01:26.023678</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>100</td>\n",
       "      <td>활동 내용 테스트&lt;br&gt;엔터 엔터 엔터&lt;br&gt;</td>\n",
       "      <td></td>\n",
       "      <td>zeus</td>\n",
       "      <td>2023-01-17 14:13:01.700220</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>1</td>\n",
       "      <td>in_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>아소비바 / 첫 배송 오더체크 / 신촌점 동시 운영중으로 큰 이슈 없음 확인 / 오...</td>\n",
       "      <td></td>\n",
       "      <td>owne</td>\n",
       "      <td>2023-01-17 17:14:31.716350</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>2023-01-17 12:00:00</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>0</td>\n",
       "      <td>done</td>\n",
       "      <td>0</td>\n",
       "      <td>1. 신규 업장 오픈 예정&lt;br&gt; - 일식, 이자카야 업종&lt;br&gt; - 설 이후 예정</td>\n",
       "      <td></td>\n",
       "      <td>orderherom</td>\n",
       "      <td>2023-01-17 17:27:53.790581</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>2023-01-17 15:00:00</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>0</td>\n",
       "      <td>before_processing</td>\n",
       "      <td>0</td>\n",
       "      <td>1. 최근 단가, 품질 이슈 상품 조사&lt;br&gt; - 밀락골드: 어제 5800원, 오늘...</td>\n",
       "      <td></td>\n",
       "      <td>orderherom</td>\n",
       "      <td>2023-01-17 17:31:56.309482</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     cust_id          sales_date activity_option  count  \\\n",
       "0         1  2108701169 2023-01-12 12:00:00           품목 확장      1   \n",
       "1         2  0105639738 2023-01-17 12:00:00           품목 확장      1   \n",
       "2         3  1585900160 2023-01-17 12:00:00           오더 체크      1   \n",
       "3         6  8890302509 2023-01-17 12:00:00           고객 케어      0   \n",
       "4         7  2023165563 2023-01-17 15:00:00           품목 확장      0   \n",
       "\n",
       "       process_state  sales_cost  \\\n",
       "0      in_processing           0   \n",
       "1      in_processing         100   \n",
       "2      in_processing           0   \n",
       "3               done           0   \n",
       "4  before_processing           0   \n",
       "\n",
       "                                         detail_memo unique_memo   insert_id  \\\n",
       "0                        품목 확장 목적 방문 / 1.17일 추가 미팅예정                   messi   \n",
       "1                          활동 내용 테스트<br>엔터 엔터 엔터<br>                    zeus   \n",
       "2  아소비바 / 첫 배송 오더체크 / 신촌점 동시 운영중으로 큰 이슈 없음 확인 / 오...                    owne   \n",
       "3     1. 신규 업장 오픈 예정<br> - 일식, 이자카야 업종<br> - 설 이후 예정              orderherom   \n",
       "4  1. 최근 단가, 품질 이슈 상품 조사<br> - 밀락골드: 어제 5800원, 오늘...              orderherom   \n",
       "\n",
       "                 insert_date sales_activities sales_date_ymd  \n",
       "0 2023-01-17 11:01:26.023678             품목수취     2023-01-12  \n",
       "1 2023-01-17 14:13:01.700220             품목수취     2023-01-17  \n",
       "2 2023-01-17 17:14:31.716350             단순방문     2023-01-17  \n",
       "3 2023-01-17 17:27:53.790581             단순방문     2023-01-17  \n",
       "4 2023-01-17 17:31:56.309482             품목수취     2023-01-17  "
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pg_sales_history.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "cust_sales_sku_pg = pd.merge(cust_sales_pg, cust_sku_pg, how='left', on=['sales_no', 'CUST_ID', 'activity_option', 'sales_activities', 'sales_date_ymd'])\n",
    "cust_sales_sku_pg_admin = pd.merge(cust_sales_sku_pg, df_pg_sales_history[['sales_no', 'insert_id']], how='left', on= 'sales_no')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sales</th>\n",
       "      <th>m7w_sales</th>\n",
       "      <th>m6w_sales</th>\n",
       "      <th>m5w_sales</th>\n",
       "      <th>m4w_sales</th>\n",
       "      <th>m3w_sales</th>\n",
       "      <th>m2w_sales</th>\n",
       "      <th>m1w_sales</th>\n",
       "      <th>p1w_sales</th>\n",
       "      <th>p2w_sales</th>\n",
       "      <th>p3w_sales</th>\n",
       "      <th>p4w_sales</th>\n",
       "      <th>p5w_sales</th>\n",
       "      <th>p6w_sales</th>\n",
       "      <th>p7w_sales</th>\n",
       "      <th>p8w_sales</th>\n",
       "      <th>m8w_sku</th>\n",
       "      <th>m7w_sku</th>\n",
       "      <th>m6w_sku</th>\n",
       "      <th>m5w_sku</th>\n",
       "      <th>m4w_sku</th>\n",
       "      <th>m3w_sku</th>\n",
       "      <th>m2w_sku</th>\n",
       "      <th>m1w_sku</th>\n",
       "      <th>p1w_sku</th>\n",
       "      <th>p2w_sku</th>\n",
       "      <th>p3w_sku</th>\n",
       "      <th>p4w_sku</th>\n",
       "      <th>p5w_sku</th>\n",
       "      <th>p6w_sku</th>\n",
       "      <th>p7w_sku</th>\n",
       "      <th>p8w_sku</th>\n",
       "      <th>insert_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>1052871.0</td>\n",
       "      <td>2070408.0</td>\n",
       "      <td>475570.0</td>\n",
       "      <td>1542820.0</td>\n",
       "      <td>110620.0</td>\n",
       "      <td>1184730.0</td>\n",
       "      <td>629400.0</td>\n",
       "      <td>854540.0</td>\n",
       "      <td>790420.0</td>\n",
       "      <td>390090.0</td>\n",
       "      <td>883020.0</td>\n",
       "      <td>441350.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1488960.0</td>\n",
       "      <td>324750.0</td>\n",
       "      <td>691780.0</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>messi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0105639738</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>zeus</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>427650.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>59780.0</td>\n",
       "      <td>18400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>owne</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>1306377.0</td>\n",
       "      <td>905276.0</td>\n",
       "      <td>400520.0</td>\n",
       "      <td>743010.0</td>\n",
       "      <td>630380.0</td>\n",
       "      <td>760620.0</td>\n",
       "      <td>610730.0</td>\n",
       "      <td>766350.0</td>\n",
       "      <td>1075660.0</td>\n",
       "      <td>879900.0</td>\n",
       "      <td>681800.0</td>\n",
       "      <td>1471480.0</td>\n",
       "      <td>600510.0</td>\n",
       "      <td>1274240.0</td>\n",
       "      <td>812600.0</td>\n",
       "      <td>363830.0</td>\n",
       "      <td>31</td>\n",
       "      <td>25</td>\n",
       "      <td>10</td>\n",
       "      <td>29</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>16</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>27</td>\n",
       "      <td>24</td>\n",
       "      <td>33</td>\n",
       "      <td>30</td>\n",
       "      <td>37</td>\n",
       "      <td>33</td>\n",
       "      <td>15</td>\n",
       "      <td>orderherom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>579910.0</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>26</td>\n",
       "      <td>28</td>\n",
       "      <td>18</td>\n",
       "      <td>orderherom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID activity_option sales_activities sales_date_ymd  \\\n",
       "0         1  2108701169           품목 확장             품목수취     2023-01-12   \n",
       "1         2  0105639738           품목 확장             품목수취     2023-01-17   \n",
       "2         3  1585900160           오더 체크             단순방문     2023-01-17   \n",
       "3         6  8890302509           고객 케어             단순방문     2023-01-17   \n",
       "4         7  2023165563           품목 확장             품목수취     2023-01-17   \n",
       "\n",
       "   m8w_sales  m7w_sales  m6w_sales  m5w_sales  m4w_sales  m3w_sales  \\\n",
       "0  1052871.0  2070408.0   475570.0  1542820.0   110620.0  1184730.0   \n",
       "1        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "2        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "3  1306377.0   905276.0   400520.0   743010.0   630380.0   760620.0   \n",
       "4   533195.0   679094.0   904550.0   883610.0   950810.0   913590.0   \n",
       "\n",
       "   m2w_sales  m1w_sales  p1w_sales  p2w_sales  p3w_sales  p4w_sales  \\\n",
       "0   629400.0   854540.0   790420.0   390090.0   883020.0   441350.0   \n",
       "1        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "2        0.0   427650.0        0.0    59780.0    18400.0        0.0   \n",
       "3   610730.0   766350.0  1075660.0   879900.0   681800.0  1471480.0   \n",
       "4   781520.0  1105030.0   579250.0   870510.0   759120.0   753100.0   \n",
       "\n",
       "   p5w_sales  p6w_sales  p7w_sales  p8w_sales  m8w_sku  m7w_sku  m6w_sku  \\\n",
       "0        0.0  1488960.0   324750.0   691780.0        9        4        4   \n",
       "1        0.0        0.0        0.0        0.0        0        0        0   \n",
       "2        0.0        0.0        0.0        0.0        0        0        0   \n",
       "3   600510.0  1274240.0   812600.0   363830.0       31       25       10   \n",
       "4   801620.0  1337590.0   624120.0   579910.0        8       31       22   \n",
       "\n",
       "   m5w_sku  m4w_sku  m3w_sku  m2w_sku  m1w_sku  p1w_sku  p2w_sku  p3w_sku  \\\n",
       "0        4        3       11        1        4        4        2        4   \n",
       "1        0        0        0        0        0        0        0        0   \n",
       "2        0        0        0        0       33        0        5        2   \n",
       "3       29       24       24       16       24       29       27       24   \n",
       "4       25       25       25       21       29       18       24       23   \n",
       "\n",
       "   p4w_sku  p5w_sku  p6w_sku  p7w_sku  p8w_sku   insert_id  \n",
       "0        2        0        8        3        2       messi  \n",
       "1        0        0        0        0        0        zeus  \n",
       "2        0        0        0        0        0        owne  \n",
       "3       33       30       37       33       15  orderherom  \n",
       "4       23       28       26       28       18  orderherom  "
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_sales_sku_pg_admin.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "update_table = pd.merge(cust_sales_sku_pg_admin, df_cust_info, how='left', on='CUST_ID')\n",
    "update_table_fn = update_table[~update_table['매장명'].isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sales</th>\n",
       "      <th>m7w_sales</th>\n",
       "      <th>m6w_sales</th>\n",
       "      <th>m5w_sales</th>\n",
       "      <th>m4w_sales</th>\n",
       "      <th>m3w_sales</th>\n",
       "      <th>m2w_sales</th>\n",
       "      <th>m1w_sales</th>\n",
       "      <th>p1w_sales</th>\n",
       "      <th>p2w_sales</th>\n",
       "      <th>p3w_sales</th>\n",
       "      <th>p4w_sales</th>\n",
       "      <th>p5w_sales</th>\n",
       "      <th>p6w_sales</th>\n",
       "      <th>p7w_sales</th>\n",
       "      <th>p8w_sales</th>\n",
       "      <th>m8w_sku</th>\n",
       "      <th>m7w_sku</th>\n",
       "      <th>m6w_sku</th>\n",
       "      <th>m5w_sku</th>\n",
       "      <th>m4w_sku</th>\n",
       "      <th>m3w_sku</th>\n",
       "      <th>m2w_sku</th>\n",
       "      <th>m1w_sku</th>\n",
       "      <th>p1w_sku</th>\n",
       "      <th>p2w_sku</th>\n",
       "      <th>p3w_sku</th>\n",
       "      <th>p4w_sku</th>\n",
       "      <th>p5w_sku</th>\n",
       "      <th>p6w_sku</th>\n",
       "      <th>p7w_sku</th>\n",
       "      <th>p8w_sku</th>\n",
       "      <th>insert_id</th>\n",
       "      <th>매장명</th>\n",
       "      <th>지역구</th>\n",
       "      <th>업종</th>\n",
       "      <th>가입일</th>\n",
       "      <th>첫발주일</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>1052871.0</td>\n",
       "      <td>2070408.0</td>\n",
       "      <td>475570.0</td>\n",
       "      <td>1542820.0</td>\n",
       "      <td>110620.0</td>\n",
       "      <td>1184730.0</td>\n",
       "      <td>629400.0</td>\n",
       "      <td>854540.0</td>\n",
       "      <td>790420.0</td>\n",
       "      <td>390090.0</td>\n",
       "      <td>883020.0</td>\n",
       "      <td>441350.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1488960.0</td>\n",
       "      <td>324750.0</td>\n",
       "      <td>691780.0</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>messi</td>\n",
       "      <td>올드문래</td>\n",
       "      <td>영등포구</td>\n",
       "      <td>주점</td>\n",
       "      <td>2022-09-20</td>\n",
       "      <td>2022-10-04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>427650.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>59780.0</td>\n",
       "      <td>18400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>owne</td>\n",
       "      <td>아소비바 공덕점</td>\n",
       "      <td>마포구</td>\n",
       "      <td>기타</td>\n",
       "      <td>2023-01-10</td>\n",
       "      <td>2023-01-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>1306377.0</td>\n",
       "      <td>905276.0</td>\n",
       "      <td>400520.0</td>\n",
       "      <td>743010.0</td>\n",
       "      <td>630380.0</td>\n",
       "      <td>760620.0</td>\n",
       "      <td>610730.0</td>\n",
       "      <td>766350.0</td>\n",
       "      <td>1075660.0</td>\n",
       "      <td>879900.0</td>\n",
       "      <td>681800.0</td>\n",
       "      <td>1471480.0</td>\n",
       "      <td>600510.0</td>\n",
       "      <td>1274240.0</td>\n",
       "      <td>812600.0</td>\n",
       "      <td>363830.0</td>\n",
       "      <td>31</td>\n",
       "      <td>25</td>\n",
       "      <td>10</td>\n",
       "      <td>29</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>16</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>27</td>\n",
       "      <td>24</td>\n",
       "      <td>33</td>\n",
       "      <td>30</td>\n",
       "      <td>37</td>\n",
       "      <td>33</td>\n",
       "      <td>15</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>타코닷(TACODOT)</td>\n",
       "      <td>마포구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-07-07</td>\n",
       "      <td>2022-07-11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>579910.0</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>26</td>\n",
       "      <td>28</td>\n",
       "      <td>18</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>그안</td>\n",
       "      <td>서대문구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-11-08</td>\n",
       "      <td>2022-11-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>샘플링</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>579910.0</td>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>26</td>\n",
       "      <td>28</td>\n",
       "      <td>18</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>그안</td>\n",
       "      <td>서대문구</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>2022-11-08</td>\n",
       "      <td>2022-11-15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID activity_option sales_activities sales_date_ymd  \\\n",
       "0         1  2108701169           품목 확장             품목수취     2023-01-12   \n",
       "2         3  1585900160           오더 체크             단순방문     2023-01-17   \n",
       "3         6  8890302509           고객 케어             단순방문     2023-01-17   \n",
       "4         7  2023165563           품목 확장             품목수취     2023-01-17   \n",
       "5         8  2023165563           품목 확장              샘플링     2023-01-17   \n",
       "\n",
       "   m8w_sales  m7w_sales  m6w_sales  m5w_sales  m4w_sales  m3w_sales  \\\n",
       "0  1052871.0  2070408.0   475570.0  1542820.0   110620.0  1184730.0   \n",
       "2        0.0        0.0        0.0        0.0        0.0        0.0   \n",
       "3  1306377.0   905276.0   400520.0   743010.0   630380.0   760620.0   \n",
       "4   533195.0   679094.0   904550.0   883610.0   950810.0   913590.0   \n",
       "5   533195.0   679094.0   904550.0   883610.0   950810.0   913590.0   \n",
       "\n",
       "   m2w_sales  m1w_sales  p1w_sales  p2w_sales  p3w_sales  p4w_sales  \\\n",
       "0   629400.0   854540.0   790420.0   390090.0   883020.0   441350.0   \n",
       "2        0.0   427650.0        0.0    59780.0    18400.0        0.0   \n",
       "3   610730.0   766350.0  1075660.0   879900.0   681800.0  1471480.0   \n",
       "4   781520.0  1105030.0   579250.0   870510.0   759120.0   753100.0   \n",
       "5   781520.0  1105030.0   579250.0   870510.0   759120.0   753100.0   \n",
       "\n",
       "   p5w_sales  p6w_sales  p7w_sales  p8w_sales  m8w_sku  m7w_sku  m6w_sku  \\\n",
       "0        0.0  1488960.0   324750.0   691780.0        9        4        4   \n",
       "2        0.0        0.0        0.0        0.0        0        0        0   \n",
       "3   600510.0  1274240.0   812600.0   363830.0       31       25       10   \n",
       "4   801620.0  1337590.0   624120.0   579910.0        8       31       22   \n",
       "5   801620.0  1337590.0   624120.0   579910.0        8       31       22   \n",
       "\n",
       "   m5w_sku  m4w_sku  m3w_sku  m2w_sku  m1w_sku  p1w_sku  p2w_sku  p3w_sku  \\\n",
       "0        4        3       11        1        4        4        2        4   \n",
       "2        0        0        0        0       33        0        5        2   \n",
       "3       29       24       24       16       24       29       27       24   \n",
       "4       25       25       25       21       29       18       24       23   \n",
       "5       25       25       25       21       29       18       24       23   \n",
       "\n",
       "   p4w_sku  p5w_sku  p6w_sku  p7w_sku  p8w_sku   insert_id           매장명  \\\n",
       "0        2        0        8        3        2       messi          올드문래   \n",
       "2        0        0        0        0        0        owne      아소비바 공덕점   \n",
       "3       33       30       37       33       15  orderherom  타코닷(TACODOT)   \n",
       "4       23       28       26       28       18  orderherom            그안   \n",
       "5       23       28       26       28       18  orderherom            그안   \n",
       "\n",
       "    지역구      업종         가입일        첫발주일  \n",
       "0  영등포구      주점  2022-09-20  2022-10-04  \n",
       "2   마포구      기타  2023-01-10  2023-01-12  \n",
       "3   마포구  서양식/피자  2022-07-07  2022-07-11  \n",
       "4  서대문구  서양식/피자  2022-11-08  2022-11-15  \n",
       "5  서대문구  서양식/피자  2022-11-08  2022-11-15  "
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "update_table_fn.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 113 entries, 0 to 115\n",
      "Data columns (total 43 columns):\n",
      " #   Column            Non-Null Count  Dtype         \n",
      "---  ------            --------------  -----         \n",
      " 0   sales_no          113 non-null    int64         \n",
      " 1   CUST_ID           113 non-null    object        \n",
      " 2   activity_option   113 non-null    object        \n",
      " 3   sales_activities  113 non-null    object        \n",
      " 4   sales_date_ymd    113 non-null    datetime64[ns]\n",
      " 5   m8w_sales         113 non-null    float64       \n",
      " 6   m7w_sales         113 non-null    float64       \n",
      " 7   m6w_sales         113 non-null    float64       \n",
      " 8   m5w_sales         113 non-null    float64       \n",
      " 9   m4w_sales         113 non-null    float64       \n",
      " 10  m3w_sales         113 non-null    float64       \n",
      " 11  m2w_sales         113 non-null    float64       \n",
      " 12  m1w_sales         113 non-null    float64       \n",
      " 13  p1w_sales         113 non-null    float64       \n",
      " 14  p2w_sales         113 non-null    float64       \n",
      " 15  p3w_sales         113 non-null    float64       \n",
      " 16  p4w_sales         113 non-null    float64       \n",
      " 17  p5w_sales         113 non-null    float64       \n",
      " 18  p6w_sales         113 non-null    float64       \n",
      " 19  p7w_sales         113 non-null    float64       \n",
      " 20  p8w_sales         113 non-null    float64       \n",
      " 21  m8w_sku           113 non-null    int64         \n",
      " 22  m7w_sku           113 non-null    int64         \n",
      " 23  m6w_sku           113 non-null    int64         \n",
      " 24  m5w_sku           113 non-null    int64         \n",
      " 25  m4w_sku           113 non-null    int64         \n",
      " 26  m3w_sku           113 non-null    int64         \n",
      " 27  m2w_sku           113 non-null    int64         \n",
      " 28  m1w_sku           113 non-null    int64         \n",
      " 29  p1w_sku           113 non-null    int64         \n",
      " 30  p2w_sku           113 non-null    int64         \n",
      " 31  p3w_sku           113 non-null    int64         \n",
      " 32  p4w_sku           113 non-null    int64         \n",
      " 33  p5w_sku           113 non-null    int64         \n",
      " 34  p6w_sku           113 non-null    int64         \n",
      " 35  p7w_sku           113 non-null    int64         \n",
      " 36  p8w_sku           113 non-null    int64         \n",
      " 37  insert_id         113 non-null    object        \n",
      " 38  매장명               113 non-null    object        \n",
      " 39  지역구               113 non-null    object        \n",
      " 40  업종                113 non-null    object        \n",
      " 41  가입일               113 non-null    object        \n",
      " 42  첫발주일              108 non-null    object        \n",
      "dtypes: datetime64[ns](1), float64(16), int64(17), object(9)\n",
      "memory usage: 38.8+ KB\n"
     ]
    }
   ],
   "source": [
    "update_table_fn.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "update_table_fn = update_table_fn[['sales_no', 'CUST_ID', '매장명', '업종', '지역구', '가입일', '첫발주일', 'insert_id', 'activity_option', 'sales_activities', 'sales_date_ymd'\n",
    "                                   , 'm8w_sales', 'm8w_sku', 'm7w_sales', 'm7w_sku', 'm6w_sales', 'm6w_sku', 'm5w_sales', 'm5w_sku'\n",
    "                                   , 'm4w_sales', 'm4w_sku', 'm3w_sales', 'm3w_sku', 'm2w_sales', 'm2w_sku', 'm1w_sales', 'm1w_sku'\n",
    "                                   , 'p1w_sales', 'p1w_sku', 'p2w_sales', 'p2w_sku', 'p3w_sales', 'p3w_sku', 'p4w_sales', 'p4w_sku'\n",
    "                                   , 'p5w_sales', 'p5w_sku', 'p6w_sales', 'p6w_sku', 'p7w_sales', 'p7w_sku', 'p8w_sales', 'p8w_sku']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "update_table_fn.rename(columns={'매장명':'BUSINESS_NAME'\n",
    "                                , '업종': 'ER_CTG_NAME'\n",
    "                                , '지역구' : 'AREA_GU'\n",
    "                                , '가입일' : 'REG_DATE_TC'\n",
    "                                , '첫발주일' : 'FIRST_ORDER_DATE'\n",
    "                                }, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>BUSINESS_NAME</th>\n",
       "      <th>ER_CTG_NAME</th>\n",
       "      <th>AREA_GU</th>\n",
       "      <th>REG_DATE_TC</th>\n",
       "      <th>FIRST_ORDER_DATE</th>\n",
       "      <th>insert_id</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sales</th>\n",
       "      <th>m8w_sku</th>\n",
       "      <th>m7w_sales</th>\n",
       "      <th>m7w_sku</th>\n",
       "      <th>m6w_sales</th>\n",
       "      <th>m6w_sku</th>\n",
       "      <th>m5w_sales</th>\n",
       "      <th>m5w_sku</th>\n",
       "      <th>m4w_sales</th>\n",
       "      <th>m4w_sku</th>\n",
       "      <th>m3w_sales</th>\n",
       "      <th>m3w_sku</th>\n",
       "      <th>m2w_sales</th>\n",
       "      <th>m2w_sku</th>\n",
       "      <th>m1w_sales</th>\n",
       "      <th>m1w_sku</th>\n",
       "      <th>p1w_sales</th>\n",
       "      <th>p1w_sku</th>\n",
       "      <th>p2w_sales</th>\n",
       "      <th>p2w_sku</th>\n",
       "      <th>p3w_sales</th>\n",
       "      <th>p3w_sku</th>\n",
       "      <th>p4w_sales</th>\n",
       "      <th>p4w_sku</th>\n",
       "      <th>p5w_sales</th>\n",
       "      <th>p5w_sku</th>\n",
       "      <th>p6w_sales</th>\n",
       "      <th>p6w_sku</th>\n",
       "      <th>p7w_sales</th>\n",
       "      <th>p7w_sku</th>\n",
       "      <th>p8w_sales</th>\n",
       "      <th>p8w_sku</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2108701169</td>\n",
       "      <td>올드문래</td>\n",
       "      <td>주점</td>\n",
       "      <td>영등포구</td>\n",
       "      <td>2022-09-20</td>\n",
       "      <td>2022-10-04</td>\n",
       "      <td>messi</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>1052871.0</td>\n",
       "      <td>9</td>\n",
       "      <td>2070408.0</td>\n",
       "      <td>4</td>\n",
       "      <td>475570.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1542820.0</td>\n",
       "      <td>4</td>\n",
       "      <td>110620.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1184730.0</td>\n",
       "      <td>11</td>\n",
       "      <td>629400.0</td>\n",
       "      <td>1</td>\n",
       "      <td>854540.0</td>\n",
       "      <td>4</td>\n",
       "      <td>790420.0</td>\n",
       "      <td>4</td>\n",
       "      <td>390090.0</td>\n",
       "      <td>2</td>\n",
       "      <td>883020.0</td>\n",
       "      <td>4</td>\n",
       "      <td>441350.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1488960.0</td>\n",
       "      <td>8</td>\n",
       "      <td>324750.0</td>\n",
       "      <td>3</td>\n",
       "      <td>691780.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1585900160</td>\n",
       "      <td>아소비바 공덕점</td>\n",
       "      <td>기타</td>\n",
       "      <td>마포구</td>\n",
       "      <td>2023-01-10</td>\n",
       "      <td>2023-01-12</td>\n",
       "      <td>owne</td>\n",
       "      <td>오더 체크</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>427650.0</td>\n",
       "      <td>33</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>59780.0</td>\n",
       "      <td>5</td>\n",
       "      <td>18400.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>8890302509</td>\n",
       "      <td>타코닷(TACODOT)</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>마포구</td>\n",
       "      <td>2022-07-07</td>\n",
       "      <td>2022-07-11</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>고객 케어</td>\n",
       "      <td>단순방문</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>1306377.0</td>\n",
       "      <td>31</td>\n",
       "      <td>905276.0</td>\n",
       "      <td>25</td>\n",
       "      <td>400520.0</td>\n",
       "      <td>10</td>\n",
       "      <td>743010.0</td>\n",
       "      <td>29</td>\n",
       "      <td>630380.0</td>\n",
       "      <td>24</td>\n",
       "      <td>760620.0</td>\n",
       "      <td>24</td>\n",
       "      <td>610730.0</td>\n",
       "      <td>16</td>\n",
       "      <td>766350.0</td>\n",
       "      <td>24</td>\n",
       "      <td>1075660.0</td>\n",
       "      <td>29</td>\n",
       "      <td>879900.0</td>\n",
       "      <td>27</td>\n",
       "      <td>681800.0</td>\n",
       "      <td>24</td>\n",
       "      <td>1471480.0</td>\n",
       "      <td>33</td>\n",
       "      <td>600510.0</td>\n",
       "      <td>30</td>\n",
       "      <td>1274240.0</td>\n",
       "      <td>37</td>\n",
       "      <td>812600.0</td>\n",
       "      <td>33</td>\n",
       "      <td>363830.0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>그안</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>서대문구</td>\n",
       "      <td>2022-11-08</td>\n",
       "      <td>2022-11-15</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>품목수취</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>8</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>31</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>22</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>25</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>25</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>25</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>21</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>29</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>18</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>24</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>23</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>23</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>28</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>26</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>28</td>\n",
       "      <td>579910.0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>2023165563</td>\n",
       "      <td>그안</td>\n",
       "      <td>서양식/피자</td>\n",
       "      <td>서대문구</td>\n",
       "      <td>2022-11-08</td>\n",
       "      <td>2022-11-15</td>\n",
       "      <td>orderherom</td>\n",
       "      <td>품목 확장</td>\n",
       "      <td>샘플링</td>\n",
       "      <td>2023-01-17</td>\n",
       "      <td>533195.0</td>\n",
       "      <td>8</td>\n",
       "      <td>679094.0</td>\n",
       "      <td>31</td>\n",
       "      <td>904550.0</td>\n",
       "      <td>22</td>\n",
       "      <td>883610.0</td>\n",
       "      <td>25</td>\n",
       "      <td>950810.0</td>\n",
       "      <td>25</td>\n",
       "      <td>913590.0</td>\n",
       "      <td>25</td>\n",
       "      <td>781520.0</td>\n",
       "      <td>21</td>\n",
       "      <td>1105030.0</td>\n",
       "      <td>29</td>\n",
       "      <td>579250.0</td>\n",
       "      <td>18</td>\n",
       "      <td>870510.0</td>\n",
       "      <td>24</td>\n",
       "      <td>759120.0</td>\n",
       "      <td>23</td>\n",
       "      <td>753100.0</td>\n",
       "      <td>23</td>\n",
       "      <td>801620.0</td>\n",
       "      <td>28</td>\n",
       "      <td>1337590.0</td>\n",
       "      <td>26</td>\n",
       "      <td>624120.0</td>\n",
       "      <td>28</td>\n",
       "      <td>579910.0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales_no     CUST_ID BUSINESS_NAME ER_CTG_NAME AREA_GU REG_DATE_TC  \\\n",
       "0         1  2108701169          올드문래          주점    영등포구  2022-09-20   \n",
       "2         3  1585900160      아소비바 공덕점          기타     마포구  2023-01-10   \n",
       "3         6  8890302509  타코닷(TACODOT)      서양식/피자     마포구  2022-07-07   \n",
       "4         7  2023165563            그안      서양식/피자    서대문구  2022-11-08   \n",
       "5         8  2023165563            그안      서양식/피자    서대문구  2022-11-08   \n",
       "\n",
       "  FIRST_ORDER_DATE   insert_id activity_option sales_activities  \\\n",
       "0       2022-10-04       messi           품목 확장             품목수취   \n",
       "2       2023-01-12        owne           오더 체크             단순방문   \n",
       "3       2022-07-11  orderherom           고객 케어             단순방문   \n",
       "4       2022-11-15  orderherom           품목 확장             품목수취   \n",
       "5       2022-11-15  orderherom           품목 확장              샘플링   \n",
       "\n",
       "  sales_date_ymd  m8w_sales  m8w_sku  m7w_sales  m7w_sku  m6w_sales  m6w_sku  \\\n",
       "0     2023-01-12  1052871.0        9  2070408.0        4   475570.0        4   \n",
       "2     2023-01-17        0.0        0        0.0        0        0.0        0   \n",
       "3     2023-01-17  1306377.0       31   905276.0       25   400520.0       10   \n",
       "4     2023-01-17   533195.0        8   679094.0       31   904550.0       22   \n",
       "5     2023-01-17   533195.0        8   679094.0       31   904550.0       22   \n",
       "\n",
       "   m5w_sales  m5w_sku  m4w_sales  m4w_sku  m3w_sales  m3w_sku  m2w_sales  \\\n",
       "0  1542820.0        4   110620.0        3  1184730.0       11   629400.0   \n",
       "2        0.0        0        0.0        0        0.0        0        0.0   \n",
       "3   743010.0       29   630380.0       24   760620.0       24   610730.0   \n",
       "4   883610.0       25   950810.0       25   913590.0       25   781520.0   \n",
       "5   883610.0       25   950810.0       25   913590.0       25   781520.0   \n",
       "\n",
       "   m2w_sku  m1w_sales  m1w_sku  p1w_sales  p1w_sku  p2w_sales  p2w_sku  \\\n",
       "0        1   854540.0        4   790420.0        4   390090.0        2   \n",
       "2        0   427650.0       33        0.0        0    59780.0        5   \n",
       "3       16   766350.0       24  1075660.0       29   879900.0       27   \n",
       "4       21  1105030.0       29   579250.0       18   870510.0       24   \n",
       "5       21  1105030.0       29   579250.0       18   870510.0       24   \n",
       "\n",
       "   p3w_sales  p3w_sku  p4w_sales  p4w_sku  p5w_sales  p5w_sku  p6w_sales  \\\n",
       "0   883020.0        4   441350.0        2        0.0        0  1488960.0   \n",
       "2    18400.0        2        0.0        0        0.0        0        0.0   \n",
       "3   681800.0       24  1471480.0       33   600510.0       30  1274240.0   \n",
       "4   759120.0       23   753100.0       23   801620.0       28  1337590.0   \n",
       "5   759120.0       23   753100.0       23   801620.0       28  1337590.0   \n",
       "\n",
       "   p6w_sku  p7w_sales  p7w_sku  p8w_sales  p8w_sku  \n",
       "0        8   324750.0        3   691780.0        2  \n",
       "2        0        0.0        0        0.0        0  \n",
       "3       37   812600.0       33   363830.0       15  \n",
       "4       26   624120.0       28   579910.0       18  \n",
       "5       26   624120.0       28   579910.0       18  "
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "update_table_fn.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 113 entries, 0 to 115\n",
      "Data columns (total 43 columns):\n",
      " #   Column            Non-Null Count  Dtype         \n",
      "---  ------            --------------  -----         \n",
      " 0   sales_no          113 non-null    int64         \n",
      " 1   CUST_ID           113 non-null    object        \n",
      " 2   BUSINESS_NAME     113 non-null    object        \n",
      " 3   ER_CTG_NAME       113 non-null    object        \n",
      " 4   AREA_GU           113 non-null    object        \n",
      " 5   REG_DATE_TC       113 non-null    object        \n",
      " 6   FIRST_ORDER_DATE  108 non-null    object        \n",
      " 7   insert_id         113 non-null    object        \n",
      " 8   activity_option   113 non-null    object        \n",
      " 9   sales_activities  113 non-null    object        \n",
      " 10  sales_date_ymd    113 non-null    datetime64[ns]\n",
      " 11  m8w_sales         113 non-null    float64       \n",
      " 12  m8w_sku           113 non-null    int64         \n",
      " 13  m7w_sales         113 non-null    float64       \n",
      " 14  m7w_sku           113 non-null    int64         \n",
      " 15  m6w_sales         113 non-null    float64       \n",
      " 16  m6w_sku           113 non-null    int64         \n",
      " 17  m5w_sales         113 non-null    float64       \n",
      " 18  m5w_sku           113 non-null    int64         \n",
      " 19  m4w_sales         113 non-null    float64       \n",
      " 20  m4w_sku           113 non-null    int64         \n",
      " 21  m3w_sales         113 non-null    float64       \n",
      " 22  m3w_sku           113 non-null    int64         \n",
      " 23  m2w_sales         113 non-null    float64       \n",
      " 24  m2w_sku           113 non-null    int64         \n",
      " 25  m1w_sales         113 non-null    float64       \n",
      " 26  m1w_sku           113 non-null    int64         \n",
      " 27  p1w_sales         113 non-null    float64       \n",
      " 28  p1w_sku           113 non-null    int64         \n",
      " 29  p2w_sales         113 non-null    float64       \n",
      " 30  p2w_sku           113 non-null    int64         \n",
      " 31  p3w_sales         113 non-null    float64       \n",
      " 32  p3w_sku           113 non-null    int64         \n",
      " 33  p4w_sales         113 non-null    float64       \n",
      " 34  p4w_sku           113 non-null    int64         \n",
      " 35  p5w_sales         113 non-null    float64       \n",
      " 36  p5w_sku           113 non-null    int64         \n",
      " 37  p6w_sales         113 non-null    float64       \n",
      " 38  p6w_sku           113 non-null    int64         \n",
      " 39  p7w_sales         113 non-null    float64       \n",
      " 40  p7w_sku           113 non-null    int64         \n",
      " 41  p8w_sales         113 non-null    float64       \n",
      " 42  p8w_sku           113 non-null    int64         \n",
      "dtypes: datetime64[ns](1), float64(16), int64(17), object(9)\n",
      "memory usage: 38.8+ KB\n"
     ]
    }
   ],
   "source": [
    "update_table_fn.info()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 중복 sales_no 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales_no</th>\n",
       "      <th>CUST_ID</th>\n",
       "      <th>BUSINESS_NAME</th>\n",
       "      <th>ER_CTG_NAME</th>\n",
       "      <th>AREA_GU</th>\n",
       "      <th>REG_DATE_TC</th>\n",
       "      <th>FIRST_ORDER_DATE</th>\n",
       "      <th>activity_option</th>\n",
       "      <th>sales_activities</th>\n",
       "      <th>sales_date_ymd</th>\n",
       "      <th>m8w_sales</th>\n",
       "      <th>m8w_sku</th>\n",
       "      <th>m7w_sales</th>\n",
       "      <th>m7w_sku</th>\n",
       "      <th>m6w_sales</th>\n",
       "      <th>m6w_sku</th>\n",
       "      <th>m5w_sales</th>\n",
       "      <th>m5w_sku</th>\n",
       "      <th>m4w_sales</th>\n",
       "      <th>m4w_sku</th>\n",
       "      <th>m3w_sales</th>\n",
       "      <th>m3w_sku</th>\n",
       "      <th>m2w_sales</th>\n",
       "      <th>m2w_sku</th>\n",
       "      <th>m1w_sales</th>\n",
       "      <th>m1w_sku</th>\n",
       "      <th>p1w_sales</th>\n",
       "      <th>p1w_sku</th>\n",
       "      <th>p2w_sales</th>\n",
       "      <th>p2w_sku</th>\n",
       "      <th>p3w_sales</th>\n",
       "      <th>p3w_sku</th>\n",
       "      <th>p4w_sales</th>\n",
       "      <th>p4w_sku</th>\n",
       "      <th>p5w_sales</th>\n",
       "      <th>p5w_sku</th>\n",
       "      <th>p6w_sales</th>\n",
       "      <th>p6w_sku</th>\n",
       "      <th>p7w_sales</th>\n",
       "      <th>p7w_sku</th>\n",
       "      <th>p8w_sales</th>\n",
       "      <th>p8w_sku</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [sales_no, CUST_ID, BUSINESS_NAME, ER_CTG_NAME, AREA_GU, REG_DATE_TC, FIRST_ORDER_DATE, activity_option, sales_activities, sales_date_ymd, m8w_sales, m8w_sku, m7w_sales, m7w_sku, m6w_sales, m6w_sku, m5w_sales, m5w_sku, m4w_sales, m4w_sku, m3w_sales, m3w_sku, m2w_sales, m2w_sku, m1w_sales, m1w_sku, p1w_sales, p1w_sku, p2w_sales, p2w_sku, p3w_sales, p3w_sku, p4w_sales, p4w_sku, p5w_sales, p5w_sku, p6w_sales, p6w_sku, p7w_sales, p7w_sku, p8w_sales, p8w_sku]\n",
       "Index: []"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insert_table = update_table_fn[update_table_fn['sales_no'] > max_sales_no]"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Connect DB\n",
    "import urllib.parse\n",
    "from sqlalchemy import create_engine\n",
    "\n",
    "\n",
    "user = 'orderhero'\n",
    "pwd_ = '@hejgl@jfh)1)3'\n",
    "pwd = urllib.parse.quote(pwd_)\n",
    "host = '175.126.82.194:3308'\n",
    "db = 'db_base'\n",
    "\n",
    "engine = create_engine(f'mysql+pymysql://{user}:{pwd}@{host}/{db}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insert_table.to_sql('TB_SALES_GRAFANA', con=engine, if_exists='append', index=False)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Real"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Connect DB\n",
    "import urllib.parse\n",
    "from sqlalchemy import create_engine\n",
    "\n",
    "\n",
    "user = 'orderherodl'\n",
    "pwd_ = 'OhejGL@JFH2023'\n",
    "pwd = urllib.parse.quote(pwd_)\n",
    "host = 'orderherodl.cafe24.com'\n",
    "db = 'orderherodl'\n",
    "\n",
    "engine = create_engine(f'mysql+pymysql://{user}:{pwd}@{host}/{db}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insert_table.to_sql('TB_SALES_GRAFANA', con=engine, if_exists='append', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "name",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "b65af54d31b884ac9ff4883fbecba8a4fbc17a067850a841f020c3656c8e9c03"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
